{
  "bomFormat" : "CycloneDX",
  "specVersion" : "1.4",
  "serialNumber" : "urn:uuid:ca08c8a8-1418-4c68-a6c8-1432c1370c52",
  "version" : 1,
  "metadata" : {
    "timestamp" : "2024-07-19T03:05:14Z",
    "tools" : [
      {
        "vendor" : "OWASP",
        "name" : "Dependency-Track",
        "version" : "4.8.0"
      }
    ],
    "component" : {
      "name" : "crt-maven-dependencies 2024-07-16 13:05:46.558043",
      "version" : "0.4.0",
      "type" : "library",
      "bom-ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
    }
  },
  "dependencies" : [
    {
      "ref" : "ddb44571-59f3-44da-baf5-79e888e044df",
      "dependsOn" : [
        "fc65bf0d-465e-42ff-b288-ceacba689a68"
      ]
    },
    {
      "ref" : "64b6928b-0226-4540-b116-d2d033c5c91e",
      "dependsOn" : [ ]
    },
    {
      "ref" : "8aa8cb2b-14a3-4435-a3a2-b65c4a634785",
      "dependsOn" : [ ]
    },
    {
      "ref" : "79b649c2-e5c2-4b0f-8c4b-52e6decfd5cb",
      "dependsOn" : [ ]
    },
    {
      "ref" : "1330b4d7-c54e-489b-8af0-36ffb845bdf3",
      "dependsOn" : [
        "0bcb673f-4224-4689-b0b2-1f80564a68a8"
      ]
    },
    {
      "ref" : "f7cfe004-cf5f-4668-9dc9-f5244a51204d",
      "dependsOn" : [ ]
    },
    {
      "ref" : "3f4ee5e1-c5a7-420a-8ff6-1b70435cd709",
      "dependsOn" : [
        "2677b80b-848b-4810-af08-76645e16f68b"
      ]
    },
    {
      "ref" : "1f204399-d17c-4593-b750-a9f697d49095",
      "dependsOn" : [
        "f7cfe004-cf5f-4668-9dc9-f5244a51204d",
        "2677b80b-848b-4810-af08-76645e16f68b",
        "3f4ee5e1-c5a7-420a-8ff6-1b70435cd709"
      ]
    },
    {
      "ref" : "2677b80b-848b-4810-af08-76645e16f68b",
      "dependsOn" : [
        "f7cfe004-cf5f-4668-9dc9-f5244a51204d"
      ]
    },
    {
      "ref" : "b397dd7b-9fa1-41d9-acef-9a3b706cb210",
      "dependsOn" : [ ]
    },
    {
      "ref" : "13c48575-40d9-4a64-9f59-e24b9f90b296",
      "dependsOn" : [ ]
    },
    {
      "ref" : "8243cd69-0381-4fd8-b9d9-e51506dfa3b7",
      "dependsOn" : [ ]
    },
    {
      "ref" : "372e5b31-cb72-4f49-b576-39104ab45207",
      "dependsOn" : [
        "f318423a-04e6-4a83-9b99-64009a5476ab",
        "4c4c0b8a-069b-413f-9a50-7c33ac1edb07"
      ]
    },
    {
      "ref" : "88d88a0f-f081-4b4a-945e-189939a663f7",
      "dependsOn" : [ ]
    },
    {
      "ref" : "ed40ef6d-3f79-4c79-9704-0237115b6f9c",
      "dependsOn" : [ ]
    },
    {
      "ref" : "0988aa0e-c015-4186-bfa3-d793887ef078",
      "dependsOn" : [ ]
    },
    {
      "ref" : "7bffe104-99c8-4a49-b81f-4519a566ebf2",
      "dependsOn" : [ ]
    },
    {
      "ref" : "c83a613c-34cb-46de-baaa-b734ce6f8ab1",
      "dependsOn" : [ ]
    },
    {
      "ref" : "4b4e45fa-7cf0-444b-b32a-52070ac5f262",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2aa84881-648f-4e25-a77e-91d4c8039a15",
      "dependsOn" : [ ]
    },
    {
      "ref" : "38956d3c-202b-4d7e-9aaf-1abfd826b357",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fef7c8a0-e519-4f95-b347-c628f03c41b7",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fc65bf0d-465e-42ff-b288-ceacba689a68",
      "dependsOn" : [
        "8aa8cb2b-14a3-4435-a3a2-b65c4a634785",
        "1330b4d7-c54e-489b-8af0-36ffb845bdf3",
        "1f204399-d17c-4593-b750-a9f697d49095",
        "b397dd7b-9fa1-41d9-acef-9a3b706cb210",
        "8243cd69-0381-4fd8-b9d9-e51506dfa3b7",
        "4b4e45fa-7cf0-444b-b32a-52070ac5f262",
        "c9e382ca-ac6f-4c11-b999-f251e50f8960",
        "dcaec448-afb9-4416-8fec-8efcd42450bc",
        "a330d182-9f5d-48c9-a82a-ef8818c39a80",
        "a87dbd6f-9e43-4c3e-89d7-ee9c01c4cc96",
        "7b129a1d-d221-4ecd-87f4-2ca4383cdce1",
        "536119c3-7983-46df-9d33-537ca9a46754",
        "29d1751d-c43b-4a02-946a-62741e52a366",
        "2757f176-0964-4763-b638-c275c6f4c124",
        "c6987d81-5abb-40df-968e-d91b0e387615",
        "fcffcb5f-b76a-4894-b711-4137c6ce69a2",
        "701b3160-28b6-4b10-ac01-330af81a7862",
        "2aa0a679-5dbf-4617-8e97-d6a72d9c235a",
        "0517412d-519c-4b7d-bea4-a9ddbb5269b8",
        "aa588213-df36-48c8-ad94-e405cd9e8e84",
        "5a760d54-67ad-4bb0-81c4-6fc0ae3c83bf",
        "eaaf5c19-c10f-4c6e-a669-0a38dad25607",
        "e3998764-44aa-4a5f-8a18-88dc3b83a9f5",
        "02497b99-ba72-4a04-838b-d0469554d64f",
        "144e5c06-6452-4e38-b6d0-672d85806ed1",
        "e3ccf569-a528-4c32-ba33-0c36ad9bba83",
        "bcf76ec7-0b21-465e-a612-7ac3491960de",
        "75002358-c67f-45d6-a987-58ac44acd70d",
        "5c6e69a4-b529-4634-bd35-c4b46a9421bd",
        "8ab22dca-9f18-45d1-b5be-13d6d74fa9c6",
        "0f94d834-2686-43a0-8f26-1919f6e0d65a",
        "bb7922b0-582b-4e9f-ae7f-41d939204d20",
        "2bda43ef-20ac-4663-8745-f8e35eb3f1b9",
        "1bf0da8d-0701-4eb8-8e2c-b28267fe3835",
        "a64a569f-2569-4bf4-98b1-79387c61fdf8",
        "f5aacb1b-6b01-4c4e-a941-cceead765947",
        "e5ba687e-b20b-4cca-b347-c39a2a7e69af",
        "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
        "7e3e9fbc-b851-4cc7-ba38-68787652c2d7",
        "3d484e9c-8c3a-4af6-8ac6-63a71210f264",
        "bcff099a-6369-4587-9b43-852bd34f4323",
        "5f270f42-f9f3-40e2-bb23-135154d7f20a",
        "aaf8bd27-ccb0-42fb-938b-de539c0ecc4d",
        "c17664cf-4d9f-4307-a23e-34b80bb6f4e1",
        "b1ef00e7-6aae-4b83-ab9c-5523fe63a747",
        "ca0eb9d2-52fc-4924-8aa9-ebd28c8af73d",
        "edcc6787-b137-45a4-996c-802aecd83a42",
        "05cd450f-6d97-430c-9034-1557e1426850",
        "57885e9f-ca25-4b22-a5c5-eed6b1b09e42",
        "83be6f87-6104-424a-b508-31e6cacedbb5"
      ]
    },
    {
      "ref" : "0b6236b1-535c-4894-924e-b87c47cf39a9",
      "dependsOn" : [ ]
    },
    {
      "ref" : "cdad30b4-2199-4037-909d-7eefe99c3757",
      "dependsOn" : [
        "2f1ac0a1-a0ee-41ce-b054-1e00600ff653",
        "0f7f1044-f1a0-4dff-97bd-ebf27b708af3",
        "27a412b9-1cc1-441c-a1a4-457d6e23e4d9",
        "701b3160-28b6-4b10-ac01-330af81a7862",
        "2aa0a679-5dbf-4617-8e97-d6a72d9c235a"
      ]
    },
    {
      "ref" : "c9e382ca-ac6f-4c11-b999-f251e50f8960",
      "dependsOn" : [
        "cdad30b4-2199-4037-909d-7eefe99c3757",
        "d631dc2b-5a0f-4d92-83de-e15c78844bec"
      ]
    },
    {
      "ref" : "dcaec448-afb9-4416-8fec-8efcd42450bc",
      "dependsOn" : [ ]
    },
    {
      "ref" : "a330d182-9f5d-48c9-a82a-ef8818c39a80",
      "dependsOn" : [ ]
    },
    {
      "ref" : "a87dbd6f-9e43-4c3e-89d7-ee9c01c4cc96",
      "dependsOn" : [ ]
    },
    {
      "ref" : "066c48ec-53b5-47dc-9304-b8c15d0da556",
      "dependsOn" : [ ]
    },
    {
      "ref" : "510d5c72-40dd-4a6c-ad3a-0042154df0ab",
      "dependsOn" : [
        "4c4c0b8a-069b-413f-9a50-7c33ac1edb07",
        "79b649c2-e5c2-4b0f-8c4b-52e6decfd5cb"
      ]
    },
    {
      "ref" : "8252d8d4-192a-4318-b14f-6d02220f3a0c",
      "dependsOn" : [ ]
    },
    {
      "ref" : "600e9543-48b3-44a7-9aa1-32d031c70372",
      "dependsOn" : [
        "66a03de7-d577-4fb7-8d03-1b0c83bee988"
      ]
    },
    {
      "ref" : "7b129a1d-d221-4ecd-87f4-2ca4383cdce1",
      "dependsOn" : [
        "d2830527-c9b7-4959-b129-8cbaa50bfdcb",
        "38956d3c-202b-4d7e-9aaf-1abfd826b357",
        "0988aa0e-c015-4186-bfa3-d793887ef078"
      ]
    },
    {
      "ref" : "d2830527-c9b7-4959-b129-8cbaa50bfdcb",
      "dependsOn" : [ ]
    },
    {
      "ref" : "75ed4170-fdd4-42c0-bab8-966a387b63c1",
      "dependsOn" : [ ]
    },
    {
      "ref" : "30089632-a21f-451f-b8d4-c1c97d17a108",
      "dependsOn" : [ ]
    },
    {
      "ref" : "536119c3-7983-46df-9d33-537ca9a46754",
      "dependsOn" : [
        "75ed4170-fdd4-42c0-bab8-966a387b63c1",
        "30089632-a21f-451f-b8d4-c1c97d17a108"
      ]
    },
    {
      "ref" : "f1836f07-3791-447f-94f8-ff94775be8a0",
      "dependsOn" : [
        "75ed4170-fdd4-42c0-bab8-966a387b63c1",
        "30089632-a21f-451f-b8d4-c1c97d17a108"
      ]
    },
    {
      "ref" : "0f7f1044-f1a0-4dff-97bd-ebf27b708af3",
      "dependsOn" : [
        "b1cd5b4a-374c-4605-a0ed-616925aeefcf",
        "e2afd88a-340a-4205-96cb-31c717b6bbc1",
        "d668737d-2fba-465e-b118-1098f250ee00"
      ]
    },
    {
      "ref" : "5ff15bb0-11c2-4478-be7a-4afeed09a78f",
      "dependsOn" : [
        "30089632-a21f-451f-b8d4-c1c97d17a108"
      ]
    },
    {
      "ref" : "29d1751d-c43b-4a02-946a-62741e52a366",
      "dependsOn" : [ ]
    },
    {
      "ref" : "b1cd5b4a-374c-4605-a0ed-616925aeefcf",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2523f0ad-583f-4ddd-9200-6e0d784a0072",
      "dependsOn" : [ ]
    },
    {
      "ref" : "c1b7c434-0e0f-436d-a037-1213b0abce09",
      "dependsOn" : [
        "cec79463-4aaf-4b4c-bb12-1aa8d8c4ee9e"
      ]
    },
    {
      "ref" : "8af83ca7-9f29-4336-9ebc-9912d052b579",
      "dependsOn" : [
        "30089632-a21f-451f-b8d4-c1c97d17a108",
        "75ed4170-fdd4-42c0-bab8-966a387b63c1",
        "c1b7c434-0e0f-436d-a037-1213b0abce09"
      ]
    },
    {
      "ref" : "0723f352-8dbe-461d-a779-1069c13f65ec",
      "dependsOn" : [ ]
    },
    {
      "ref" : "4f764d76-8ffd-4e91-bde0-015b284558a7",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e05620ae-1e73-4e63-840d-272895be7877",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2757f176-0964-4763-b638-c275c6f4c124",
      "dependsOn" : [
        "0723f352-8dbe-461d-a779-1069c13f65ec"
      ]
    },
    {
      "ref" : "c6987d81-5abb-40df-968e-d91b0e387615",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fcffcb5f-b76a-4894-b711-4137c6ce69a2",
      "dependsOn" : [ ]
    },
    {
      "ref" : "4c4c0b8a-069b-413f-9a50-7c33ac1edb07",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2aa0a679-5dbf-4617-8e97-d6a72d9c235a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "701b3160-28b6-4b10-ac01-330af81a7862",
      "dependsOn" : [ ]
    },
    {
      "ref" : "66a03de7-d577-4fb7-8d03-1b0c83bee988",
      "dependsOn" : [ ]
    },
    {
      "ref" : "34b5a916-9e51-4211-86e6-3eb0954ecc5a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "0517412d-519c-4b7d-bea4-a9ddbb5269b8",
      "dependsOn" : [ ]
    },
    {
      "ref" : "0bcb673f-4224-4689-b0b2-1f80564a68a8",
      "dependsOn" : [ ]
    },
    {
      "ref" : "1b29fe7a-551a-48a0-bf66-cf5ed7d9728b",
      "dependsOn" : [ ]
    },
    {
      "ref" : "27a412b9-1cc1-441c-a1a4-457d6e23e4d9",
      "dependsOn" : [
        "df7c15ff-421d-4d5a-8c6c-23635b4888bd"
      ]
    },
    {
      "ref" : "aa588213-df36-48c8-ad94-e405cd9e8e84",
      "dependsOn" : [ ]
    },
    {
      "ref" : "f318423a-04e6-4a83-9b99-64009a5476ab",
      "dependsOn" : [ ]
    },
    {
      "ref" : "10aa3ffe-6ca2-4996-a74d-1dc41bd5adec",
      "dependsOn" : [ ]
    },
    {
      "ref" : "5a760d54-67ad-4bb0-81c4-6fc0ae3c83bf",
      "dependsOn" : [
        "8af83ca7-9f29-4336-9ebc-9912d052b579",
        "f1836f07-3791-447f-94f8-ff94775be8a0",
        "5ff15bb0-11c2-4478-be7a-4afeed09a78f",
        "1b29fe7a-551a-48a0-bf66-cf5ed7d9728b",
        "cfadf551-e98d-4b22-bbb8-d833b12c4b4d",
        "4b48074d-92da-4ad2-9879-bd8c72576c1b",
        "47d9a3fd-d8ff-431d-91e9-a37614d69d2f",
        "4682d566-1a49-4ad6-acba-296158ff9ab2",
        "829c54dc-d150-40a4-821a-a656a7bf28a6",
        "ed40ef6d-3f79-4c79-9704-0237115b6f9c"
      ]
    },
    {
      "ref" : "227ecdb7-ad59-4027-a2da-7d667213ee7e",
      "dependsOn" : [
        "1cb9c9ff-4ec9-4243-8628-316e052ac0bd",
        "be22f514-34d5-4845-8db6-168413ceb2e4",
        "9c9fa215-5ccc-4c67-a1e2-a550cce0bf26"
      ]
    },
    {
      "ref" : "eaaf5c19-c10f-4c6e-a669-0a38dad25607",
      "dependsOn" : [
        "e3998764-44aa-4a5f-8a18-88dc3b83a9f5",
        "64b6928b-0226-4540-b116-d2d033c5c91e"
      ]
    },
    {
      "ref" : "e3998764-44aa-4a5f-8a18-88dc3b83a9f5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e4abbe6f-369c-4a33-8b3c-70bbe28bc255",
      "dependsOn" : [ ]
    },
    {
      "ref" : "6335c18e-66e8-4741-9faa-3f089ffa2b7c",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d4ff6283-91de-4d19-96b3-824a8416e626",
      "dependsOn" : [
        "6335c18e-66e8-4741-9faa-3f089ffa2b7c"
      ]
    },
    {
      "ref" : "956b76d6-9919-410a-b1d7-8f404ee73da9",
      "dependsOn" : [
        "86d13443-75f2-4911-92ce-a32b09b883bc"
      ]
    },
    {
      "ref" : "86d13443-75f2-4911-92ce-a32b09b883bc",
      "dependsOn" : [ ]
    },
    {
      "ref" : "be22f514-34d5-4845-8db6-168413ceb2e4",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e75866b0-34da-4629-82ee-ff549c8cf0cd",
      "dependsOn" : [ ]
    },
    {
      "ref" : "552a2b55-8847-4028-95d4-51e96ee85791",
      "dependsOn" : [ ]
    },
    {
      "ref" : "39b6fda1-9cd5-485e-99f1-3307e3608281",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d631dc2b-5a0f-4d92-83de-e15c78844bec",
      "dependsOn" : [
        "dc5fb231-b1bc-49f5-8eea-e5e5e7c30b6a",
        "565ede49-d79e-4170-80e7-8900f95c25a0",
        "c74dbed5-0aad-4a38-93cc-d8581c04ffb3",
        "0bab641c-d67d-4fb8-a5da-c20316ec08f5",
        "552a2b55-8847-4028-95d4-51e96ee85791",
        "2ac5b844-a224-448c-af73-46106063c444",
        "93bb6f23-e6af-45c0-9a89-b4d0f0957f39",
        "56c172d8-7f43-4dcc-9770-9fa6508ec134",
        "d4a2b2ad-ff0a-4ce8-88a9-cb493c32f7c7",
        "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a",
        "4088b94d-02a8-4d58-98bd-65dfbb88f81c",
        "41e77098-6585-401f-b67f-03a34df7efcd",
        "b61ab68b-c205-46ab-b546-2cf1abb049f3",
        "288038a4-2244-4f4d-bf5e-25576b8218fd",
        "510d5c72-40dd-4a6c-ad3a-0042154df0ab",
        "48574764-374e-4bb4-93e9-8517627a0847",
        "fca7060d-322b-4878-a5a4-4facff3a1c83",
        "e58c9297-4468-4206-96d6-afd6d8232a1e"
      ]
    },
    {
      "ref" : "dc5fb231-b1bc-49f5-8eea-e5e5e7c30b6a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "93bb6f23-e6af-45c0-9a89-b4d0f0957f39",
      "dependsOn" : [
        "48574764-374e-4bb4-93e9-8517627a0847",
        "dc5fb231-b1bc-49f5-8eea-e5e5e7c30b6a",
        "552a2b55-8847-4028-95d4-51e96ee85791",
        "39b6fda1-9cd5-485e-99f1-3307e3608281"
      ]
    },
    {
      "ref" : "2ac5b844-a224-448c-af73-46106063c444",
      "dependsOn" : [
        "dc5fb231-b1bc-49f5-8eea-e5e5e7c30b6a",
        "552a2b55-8847-4028-95d4-51e96ee85791",
        "288038a4-2244-4f4d-bf5e-25576b8218fd"
      ]
    },
    {
      "ref" : "0bab641c-d67d-4fb8-a5da-c20316ec08f5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d4a2b2ad-ff0a-4ce8-88a9-cb493c32f7c7",
      "dependsOn" : [
        "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a",
        "4088b94d-02a8-4d58-98bd-65dfbb88f81c",
        "41e77098-6585-401f-b67f-03a34df7efcd"
      ]
    },
    {
      "ref" : "56c172d8-7f43-4dcc-9770-9fa6508ec134",
      "dependsOn" : [
        "dc5fb231-b1bc-49f5-8eea-e5e5e7c30b6a",
        "93bb6f23-e6af-45c0-9a89-b4d0f0957f39",
        "0bab641c-d67d-4fb8-a5da-c20316ec08f5",
        "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a",
        "4088b94d-02a8-4d58-98bd-65dfbb88f81c",
        "41e77098-6585-401f-b67f-03a34df7efcd",
        "d4a2b2ad-ff0a-4ce8-88a9-cb493c32f7c7"
      ]
    },
    {
      "ref" : "4088b94d-02a8-4d58-98bd-65dfbb88f81c",
      "dependsOn" : [
        "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a"
      ]
    },
    {
      "ref" : "41e77098-6585-401f-b67f-03a34df7efcd",
      "dependsOn" : [
        "fb8dea57-9ce2-4a07-b09e-ae5ad7b98c4a"
      ]
    },
    {
      "ref" : "565ede49-d79e-4170-80e7-8900f95c25a0",
      "dependsOn" : [ ]
    },
    {
      "ref" : "c74dbed5-0aad-4a38-93cc-d8581c04ffb3",
      "dependsOn" : [
        "39b6fda1-9cd5-485e-99f1-3307e3608281",
        "48574764-374e-4bb4-93e9-8517627a0847",
        "565ede49-d79e-4170-80e7-8900f95c25a0",
        "e58c9297-4468-4206-96d6-afd6d8232a1e"
      ]
    },
    {
      "ref" : "b61ab68b-c205-46ab-b546-2cf1abb049f3",
      "dependsOn" : [ ]
    },
    {
      "ref" : "cfadf551-e98d-4b22-bbb8-d833b12c4b4d",
      "dependsOn" : [ ]
    },
    {
      "ref" : "413d413a-7292-4a68-9a4e-4eeb02107746",
      "dependsOn" : [
        "8252d8d4-192a-4318-b14f-6d02220f3a0c",
        "e4abbe6f-369c-4a33-8b3c-70bbe28bc255"
      ]
    },
    {
      "ref" : "02497b99-ba72-4a04-838b-d0469554d64f",
      "dependsOn" : [
        "413d413a-7292-4a68-9a4e-4eeb02107746",
        "722446ff-dfc7-4e1e-94b6-2d7ee595c85a"
      ]
    },
    {
      "ref" : "144e5c06-6452-4e38-b6d0-672d85806ed1",
      "dependsOn" : [ ]
    },
    {
      "ref" : "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d"
      ]
    },
    {
      "ref" : "bd45d739-bd34-47dd-9371-4b7530214cc6",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
        "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
        "de25cc17-cf22-4083-804d-ac12f414a064"
      ]
    },
    {
      "ref" : "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2bf2fd2d-be73-42e4-82e3-21521fbd0aff",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
        "0200bdb2-fde4-4e3b-ad95-d22e4769085f",
        "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
        "de25cc17-cf22-4083-804d-ac12f414a064",
        "bd45d739-bd34-47dd-9371-4b7530214cc6"
      ]
    },
    {
      "ref" : "0200bdb2-fde4-4e3b-ad95-d22e4769085f",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d"
      ]
    },
    {
      "ref" : "de25cc17-cf22-4083-804d-ac12f414a064",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
        "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
        "0200bdb2-fde4-4e3b-ad95-d22e4769085f"
      ]
    },
    {
      "ref" : "1a291363-730b-4ecc-aa15-48ec278ce700",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
        "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
        "de25cc17-cf22-4083-804d-ac12f414a064",
        "74dfd875-4920-4479-8368-e7fc6649141c"
      ]
    },
    {
      "ref" : "74dfd875-4920-4479-8368-e7fc6649141c",
      "dependsOn" : [
        "285e3126-9c0e-453d-89c2-cc7c3d3b575d",
        "ccedfc57-7b8a-481c-a3e9-4f36ff2517d1",
        "de25cc17-cf22-4083-804d-ac12f414a064"
      ]
    },
    {
      "ref" : "377337e6-0e36-439b-a606-bae55caf9dec",
      "dependsOn" : [
        "34b5a916-9e51-4211-86e6-3eb0954ecc5a"
      ]
    },
    {
      "ref" : "e3ccf569-a528-4c32-ba33-0c36ad9bba83",
      "dependsOn" : [
        "f3140d11-8a52-4919-b030-cd8648ea0043"
      ]
    },
    {
      "ref" : "f3140d11-8a52-4919-b030-cd8648ea0043",
      "dependsOn" : [ ]
    },
    {
      "ref" : "109b3d1e-a8e5-42cb-be3c-348fc6132b17",
      "dependsOn" : [ ]
    },
    {
      "ref" : "288038a4-2244-4f4d-bf5e-25576b8218fd",
      "dependsOn" : [
        "372e5b31-cb72-4f49-b576-39104ab45207",
        "109b3d1e-a8e5-42cb-be3c-348fc6132b17",
        "fca7060d-322b-4878-a5a4-4facff3a1c83"
      ]
    },
    {
      "ref" : "2f1ac0a1-a0ee-41ce-b054-1e00600ff653",
      "dependsOn" : [ ]
    },
    {
      "ref" : "cec79463-4aaf-4b4c-bb12-1aa8d8c4ee9e",
      "dependsOn" : [ ]
    },
    {
      "ref" : "7ca477f1-d27d-4af2-81ba-ebb467f130ba",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fca7060d-322b-4878-a5a4-4facff3a1c83",
      "dependsOn" : [ ]
    },
    {
      "ref" : "bcf76ec7-0b21-465e-a612-7ac3491960de",
      "dependsOn" : [ ]
    },
    {
      "ref" : "48574764-374e-4bb4-93e9-8517627a0847",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e58c9297-4468-4206-96d6-afd6d8232a1e",
      "dependsOn" : [
        "7ca477f1-d27d-4af2-81ba-ebb467f130ba"
      ]
    },
    {
      "ref" : "75002358-c67f-45d6-a987-58ac44acd70d",
      "dependsOn" : [ ]
    },
    {
      "ref" : "7685a7de-a4d7-4191-9470-c2cf6972d177",
      "dependsOn" : [
        "0988aa0e-c015-4186-bfa3-d793887ef078",
        "7bffe104-99c8-4a49-b81f-4519a566ebf2",
        "fef7c8a0-e519-4f95-b347-c628f03c41b7"
      ]
    },
    {
      "ref" : "5c6e69a4-b529-4634-bd35-c4b46a9421bd",
      "dependsOn" : [
        "7685a7de-a4d7-4191-9470-c2cf6972d177",
        "3c034094-4402-4b8f-a71d-da29893fa41a",
        "c83a613c-34cb-46de-baaa-b734ce6f8ab1",
        "0b6236b1-535c-4894-924e-b87c47cf39a9"
      ]
    },
    {
      "ref" : "3c034094-4402-4b8f-a71d-da29893fa41a",
      "dependsOn" : [
        "2ae44d31-4edb-404c-899f-65b6b9b746da"
      ]
    },
    {
      "ref" : "8671dcf3-dca0-4c44-aa41-7dc930f6e2d5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "83613962-56ce-4a24-8546-da70429ff544",
      "dependsOn" : [
        "8671dcf3-dca0-4c44-aa41-7dc930f6e2d5"
      ]
    },
    {
      "ref" : "4b48074d-92da-4ad2-9879-bd8c72576c1b",
      "dependsOn" : [ ]
    },
    {
      "ref" : "47d9a3fd-d8ff-431d-91e9-a37614d69d2f",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e02e4d2f-b87b-4792-a83a-e82b6938462a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "4682d566-1a49-4ad6-acba-296158ff9ab2",
      "dependsOn" : [ ]
    },
    {
      "ref" : "8ab22dca-9f18-45d1-b5be-13d6d74fa9c6",
      "dependsOn" : [
        "e02e4d2f-b87b-4792-a83a-e82b6938462a"
      ]
    },
    {
      "ref" : "0e0bedec-022f-4817-b006-8032a7c6cea6",
      "dependsOn" : [
        "d89d0018-fa1e-4d44-b916-1e8c9fadbccc",
        "2f617322-720a-451e-b0e6-0784d3809d24"
      ]
    },
    {
      "ref" : "722446ff-dfc7-4e1e-94b6-2d7ee595c85a",
      "dependsOn" : [
        "0e0bedec-022f-4817-b006-8032a7c6cea6"
      ]
    },
    {
      "ref" : "498447ff-1a78-45db-a6d0-d0eae5e3e09b",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d89d0018-fa1e-4d44-b916-1e8c9fadbccc",
      "dependsOn" : [
        "498447ff-1a78-45db-a6d0-d0eae5e3e09b"
      ]
    },
    {
      "ref" : "2f617322-720a-451e-b0e6-0784d3809d24",
      "dependsOn" : [
        "498447ff-1a78-45db-a6d0-d0eae5e3e09b"
      ]
    },
    {
      "ref" : "df7c15ff-421d-4d5a-8c6c-23635b4888bd",
      "dependsOn" : [ ]
    },
    {
      "ref" : "a197eeb4-f85f-4788-beb4-c51a5f3b1f94",
      "dependsOn" : [ ]
    },
    {
      "ref" : "9c9fa215-5ccc-4c67-a1e2-a550cce0bf26",
      "dependsOn" : [ ]
    },
    {
      "ref" : "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
      "dependsOn" : [
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b"
      ]
    },
    {
      "ref" : "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
      "dependsOn" : [
        "8395e2b1-ecf3-4969-8849-1ee07d48964b"
      ]
    },
    {
      "ref" : "0f94d834-2686-43a0-8f26-1919f6e0d65a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e5de611d-254b-4cc4-81cc-099e357801e5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "93d0b4b2-c27d-426a-b376-ceace7018f75",
      "dependsOn" : [
        "e5de611d-254b-4cc4-81cc-099e357801e5",
        "cc1d7073-4457-494c-90f4-a6d5e7b30fae"
      ]
    },
    {
      "ref" : "cc1d7073-4457-494c-90f4-a6d5e7b30fae",
      "dependsOn" : [ ]
    },
    {
      "ref" : "bb7922b0-582b-4e9f-ae7f-41d939204d20",
      "dependsOn" : [
        "cc1d7073-4457-494c-90f4-a6d5e7b30fae",
        "b7294e8c-c195-47ee-a420-57a5a2fd7dfa",
        "4f764d76-8ffd-4e91-bde0-015b284558a7",
        "a197eeb4-f85f-4788-beb4-c51a5f3b1f94"
      ]
    },
    {
      "ref" : "2bda43ef-20ac-4663-8745-f8e35eb3f1b9",
      "dependsOn" : [
        "93d0b4b2-c27d-426a-b376-ceace7018f75"
      ]
    },
    {
      "ref" : "1bf0da8d-0701-4eb8-8e2c-b28267fe3835",
      "dependsOn" : [
        "bbc77fb1-47f3-4138-b069-bf0feb9bc0aa"
      ]
    },
    {
      "ref" : "b5d85513-b016-454a-8804-9d29c024dc4a",
      "dependsOn" : [
        "2523f0ad-583f-4ddd-9200-6e0d784a0072"
      ]
    },
    {
      "ref" : "b7294e8c-c195-47ee-a420-57a5a2fd7dfa",
      "dependsOn" : [
        "956b76d6-9919-410a-b1d7-8f404ee73da9",
        "d4ff6283-91de-4d19-96b3-824a8416e626",
        "10aa3ffe-6ca2-4996-a74d-1dc41bd5adec"
      ]
    },
    {
      "ref" : "99bbcff1-b03a-4d77-9a40-54cbb345797b",
      "dependsOn" : [
        "4f764d76-8ffd-4e91-bde0-015b284558a7",
        "00928eab-1146-4d44-b64e-f9a589075a34",
        "1e78851f-2ed2-430b-9cd8-04441173dd9b",
        "00a1c7b9-063a-4aab-9ed3-969eaeaf688c"
      ]
    },
    {
      "ref" : "a64a569f-2569-4bf4-98b1-79387c61fdf8",
      "dependsOn" : [
        "e05620ae-1e73-4e63-840d-272895be7877",
        "1e78851f-2ed2-430b-9cd8-04441173dd9b",
        "600e9543-48b3-44a7-9aa1-32d031c70372"
      ]
    },
    {
      "ref" : "f5aacb1b-6b01-4c4e-a941-cceead765947",
      "dependsOn" : [
        "b5d85513-b016-454a-8804-9d29c024dc4a",
        "99bbcff1-b03a-4d77-9a40-54cbb345797b"
      ]
    },
    {
      "ref" : "e5ba687e-b20b-4cca-b347-c39a2a7e69af",
      "dependsOn" : [
        "5421def9-c92b-4e06-8281-1e1a971cffb3",
        "096e52ac-9325-4889-afd2-f5b5d66cc720"
      ]
    },
    {
      "ref" : "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
      "dependsOn" : [
        "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "5c3836db-bcc1-40ef-801e-e325612a8855"
      ]
    },
    {
      "ref" : "8395e2b1-ecf3-4969-8849-1ee07d48964b",
      "dependsOn" : [
        "fc64ff3d-95b4-47fd-aacb-8c83194e4f87"
      ]
    },
    {
      "ref" : "5c3836db-bcc1-40ef-801e-e325612a8855",
      "dependsOn" : [
        "8395e2b1-ecf3-4969-8849-1ee07d48964b"
      ]
    },
    {
      "ref" : "0cf6788c-dd77-41e2-91ca-96b0f6c90055",
      "dependsOn" : [
        "066c48ec-53b5-47dc-9304-b8c15d0da556",
        "88d88a0f-f081-4b4a-945e-189939a663f7",
        "741a0438-fe2b-4d35-a405-3398a37a240f"
      ]
    },
    {
      "ref" : "c60ad6bf-cb55-4d74-a593-d845f4e434bf",
      "dependsOn" : [
        "0cf6788c-dd77-41e2-91ca-96b0f6c90055",
        "2b132122-1148-483f-9330-c11d4c7d474b"
      ]
    },
    {
      "ref" : "2b132122-1148-483f-9330-c11d4c7d474b",
      "dependsOn" : [
        "0cf6788c-dd77-41e2-91ca-96b0f6c90055"
      ]
    },
    {
      "ref" : "fb6fa2d6-3e79-4816-a527-4e9a9e02af80",
      "dependsOn" : [
        "066c48ec-53b5-47dc-9304-b8c15d0da556",
        "88d88a0f-f081-4b4a-945e-189939a663f7",
        "741a0438-fe2b-4d35-a405-3398a37a240f",
        "2b132122-1148-483f-9330-c11d4c7d474b"
      ]
    },
    {
      "ref" : "05cd450f-6d97-430c-9034-1557e1426850",
      "dependsOn" : [
        "5e25d404-67c8-4686-8bb7-54dd91153f2a",
        "d04e3507-6be5-4312-8019-0a77c03d06d1",
        "2b132122-1148-483f-9330-c11d4c7d474b",
        "c60ad6bf-cb55-4d74-a593-d845f4e434bf",
        "be022a70-6494-4b67-8452-04d293491c23",
        "fb6fa2d6-3e79-4816-a527-4e9a9e02af80",
        "066c48ec-53b5-47dc-9304-b8c15d0da556",
        "88d88a0f-f081-4b4a-945e-189939a663f7",
        "741a0438-fe2b-4d35-a405-3398a37a240f",
        "e75866b0-34da-4629-82ee-ff549c8cf0cd"
      ]
    },
    {
      "ref" : "be022a70-6494-4b67-8452-04d293491c23",
      "dependsOn" : [
        "5e25d404-67c8-4686-8bb7-54dd91153f2a",
        "d04e3507-6be5-4312-8019-0a77c03d06d1",
        "2b132122-1148-483f-9330-c11d4c7d474b",
        "c60ad6bf-cb55-4d74-a593-d845f4e434bf",
        "fb6fa2d6-3e79-4816-a527-4e9a9e02af80",
        "066c48ec-53b5-47dc-9304-b8c15d0da556",
        "88d88a0f-f081-4b4a-945e-189939a663f7",
        "741a0438-fe2b-4d35-a405-3398a37a240f"
      ]
    },
    {
      "ref" : "edcc6787-b137-45a4-996c-802aecd83a42",
      "dependsOn" : [
        "fb6fa2d6-3e79-4816-a527-4e9a9e02af80"
      ]
    },
    {
      "ref" : "fc64ff3d-95b4-47fd-aacb-8c83194e4f87",
      "dependsOn" : [ ]
    },
    {
      "ref" : "bbc77fb1-47f3-4138-b069-bf0feb9bc0aa",
      "dependsOn" : [
        "a3e2c62c-e05d-493a-a8f5-f8d9a3e77e26"
      ]
    },
    {
      "ref" : "7e3e9fbc-b851-4cc7-ba38-68787652c2d7",
      "dependsOn" : [
        "227ecdb7-ad59-4027-a2da-7d667213ee7e",
        "61f1a3d2-b621-44fc-b75b-266de6c8e800",
        "5421def9-c92b-4e06-8281-1e1a971cffb3",
        "a3e2c62c-e05d-493a-a8f5-f8d9a3e77e26"
      ]
    },
    {
      "ref" : "5421def9-c92b-4e06-8281-1e1a971cffb3",
      "dependsOn" : [ ]
    },
    {
      "ref" : "3d484e9c-8c3a-4af6-8ac6-63a71210f264",
      "dependsOn" : [
        "bbc77fb1-47f3-4138-b069-bf0feb9bc0aa",
        "a3e2c62c-e05d-493a-a8f5-f8d9a3e77e26"
      ]
    },
    {
      "ref" : "bcff099a-6369-4587-9b43-852bd34f4323",
      "dependsOn" : [ ]
    },
    {
      "ref" : "741a0438-fe2b-4d35-a405-3398a37a240f",
      "dependsOn" : [ ]
    },
    {
      "ref" : "61f1a3d2-b621-44fc-b75b-266de6c8e800",
      "dependsOn" : [ ]
    },
    {
      "ref" : "aaf8bd27-ccb0-42fb-938b-de539c0ecc4d",
      "dependsOn" : [
        "697d5441-5bf5-42c3-b3f9-7c3f87a44a6f",
        "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b"
      ]
    },
    {
      "ref" : "697d5441-5bf5-42c3-b3f9-7c3f87a44a6f",
      "dependsOn" : [
        "df117687-02a3-4c38-b446-825859dab48a",
        "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "5c3836db-bcc1-40ef-801e-e325612a8855"
      ]
    },
    {
      "ref" : "df117687-02a3-4c38-b446-825859dab48a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "7f4deb9d-d01f-4505-9020-bbef88be6b84",
      "dependsOn" : [
        "697d5441-5bf5-42c3-b3f9-7c3f87a44a6f",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "cfaef085-a795-4a21-91a7-e570acb76526"
      ]
    },
    {
      "ref" : "5f270f42-f9f3-40e2-bb23-135154d7f20a",
      "dependsOn" : [
        "697d5441-5bf5-42c3-b3f9-7c3f87a44a6f",
        "7f4deb9d-d01f-4505-9020-bbef88be6b84",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "377337e6-0e36-439b-a606-bae55caf9dec"
      ]
    },
    {
      "ref" : "c17664cf-4d9f-4307-a23e-34b80bb6f4e1",
      "dependsOn" : [
        "697d5441-5bf5-42c3-b3f9-7c3f87a44a6f",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
        "5c3836db-bcc1-40ef-801e-e325612a8855",
        "cfaef085-a795-4a21-91a7-e570acb76526"
      ]
    },
    {
      "ref" : "a3e2c62c-e05d-493a-a8f5-f8d9a3e77e26",
      "dependsOn" : [ ]
    },
    {
      "ref" : "cfaef085-a795-4a21-91a7-e570acb76526",
      "dependsOn" : [
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b"
      ]
    },
    {
      "ref" : "b1ef00e7-6aae-4b83-ab9c-5523fe63a747",
      "dependsOn" : [
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "cfaef085-a795-4a21-91a7-e570acb76526",
        "83613962-56ce-4a24-8546-da70429ff544"
      ]
    },
    {
      "ref" : "ca0eb9d2-52fc-4924-8aa9-ebd28c8af73d",
      "dependsOn" : [
        "03e6bd6b-deaa-46e8-abb8-55ece31cce1f",
        "33e70d7e-be46-4afa-8030-f7da2ef6b5e8",
        "34df51c3-f80b-4a72-bb78-88ba5c6f618e",
        "8395e2b1-ecf3-4969-8849-1ee07d48964b",
        "5c3836db-bcc1-40ef-801e-e325612a8855",
        "cfaef085-a795-4a21-91a7-e570acb76526"
      ]
    },
    {
      "ref" : "096e52ac-9325-4889-afd2-f5b5d66cc720",
      "dependsOn" : [ ]
    },
    {
      "ref" : "e2afd88a-340a-4205-96cb-31c717b6bbc1",
      "dependsOn" : [ ]
    },
    {
      "ref" : "5e25d404-67c8-4686-8bb7-54dd91153f2a",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d04e3507-6be5-4312-8019-0a77c03d06d1",
      "dependsOn" : [
        "5e25d404-67c8-4686-8bb7-54dd91153f2a"
      ]
    },
    {
      "ref" : "00928eab-1146-4d44-b64e-f9a589075a34",
      "dependsOn" : [ ]
    },
    {
      "ref" : "1e78851f-2ed2-430b-9cd8-04441173dd9b",
      "dependsOn" : [ ]
    },
    {
      "ref" : "00a1c7b9-063a-4aab-9ed3-969eaeaf688c",
      "dependsOn" : [
        "00928eab-1146-4d44-b64e-f9a589075a34"
      ]
    },
    {
      "ref" : "57885e9f-ca25-4b22-a5c5-eed6b1b09e42",
      "dependsOn" : [
        "2aa84881-648f-4e25-a77e-91d4c8039a15",
        "df7c15ff-421d-4d5a-8c6c-23635b4888bd"
      ]
    },
    {
      "ref" : "d668737d-2fba-465e-b118-1098f250ee00",
      "dependsOn" : [
        "e2afd88a-340a-4205-96cb-31c717b6bbc1"
      ]
    },
    {
      "ref" : "83be6f87-6104-424a-b508-31e6cacedbb5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "2ae44d31-4edb-404c-899f-65b6b9b746da",
      "dependsOn" : [ ]
    },
    {
      "ref" : "829c54dc-d150-40a4-821a-a656a7bf28a6",
      "dependsOn" : [
        "fc3895f1-b760-4d78-9a5a-b87137ef2a8d",
        "13c48575-40d9-4a64-9f59-e24b9f90b296",
        "2bf2fd2d-be73-42e4-82e3-21521fbd0aff",
        "1a291363-730b-4ecc-aa15-48ec278ce700"
      ]
    },
    {
      "ref" : "fc3895f1-b760-4d78-9a5a-b87137ef2a8d",
      "dependsOn" : [
        "13c48575-40d9-4a64-9f59-e24b9f90b296"
      ]
    },
    {
      "ref" : "1cb9c9ff-4ec9-4243-8628-316e052ac0bd",
      "dependsOn" : [ ]
    }
  ],
  "vulnerabilities" : [
    {
      "bom-ref" : "624ef6d8-1b62-4955-a2df-c0c0638f5d6e",
      "id" : "GHSA-gwrp-pvrq-jmwv",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        20,
        22
      ],
      "description" : "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
      "published" : "2021-04-26T16:04:00Z",
      "updated" : "2024-02-14T20:26:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "16fe58c1-85ab-444e-8dcf-95096022287f",
      "id" : "GHSA-683x-4444-jxh8",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        611
      ],
      "description" : "### Impact Before deserializing CycloneDX Bill of Materials in XML format, _cyclonedx-core-java_ leverages XPath expressions to determine the schema version of the BOM. The `DocumentBuilderFactory` used to evaluate XPath expressions was not configured securely, making the library vulnerable to XML External Entity (XXE) injection. XXE injection can be exploited to exfiltrate local file content, or perform Server Side Request Forgery (SSRF) to access infrastructure adjacent to the vulnerable application. ### PoC ```java import org.cyclonedx.parsers.XmlParser; class Poc { public static void main(String[] args) { // Will throw org.cyclonedx.exception.ParseException: java.net.ConnectException: Connection refused new XmlParser().parse(\"\"\" <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE bom [<!ENTITY % sp SYSTEM \"https://localhost:1010/does-not-exist/file.dtd\"> %sp;]> <bom xmlns=\"http://cyclonedx.org/schema/bom/1.5\"/> \"\"\".getBytes()); } } ``` ### Patches The vulnerability has been fixed in _cyclonedx-core-java_ version 0.9.4. ### Workarounds If feasible, applications can reject XML documents before handing them to _cyclonedx-core-java_ for parsing. This may be an option if incoming CycloneDX BOMs are known to be in JSON format. ### References * Issue was fixed via <https://github.com/CycloneDX/cyclonedx-core-java/pull/434> * Issue was introduced via <https://github.com/CycloneDX/cyclonedx-core-java/commit/162aa594f347b3f612fe0a45071693c3cd398ce9> * <https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing> * <https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html#xpathexpression>",
      "published" : "2024-06-24T20:44:48Z",
      "updated" : "2024-06-28T18:58:51Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/cyclonedx/parsers/XmlParser.java Patch commit(s): https://github.com/CycloneDX/cyclonedx-core-java/pull/434/commits/ab0bc9c530d24f737970dbd0287d1190b129853d Patched version(s): >= 9.0.4 TODO: Configure CRT to reject XML format BOM files. CRT currently only utilizes JSON format BOM files, so rejecting XML formats will resolve this vulnerability."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "25c982f5-defc-4b4c-b158-e56b420f7836",
      "id" : "GHSA-fv22-xp26-mm9w",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "## Withdrawn This advisory has been withdrawn because it has been found to be a duplicate. Please see the issue [here](https://github.com/x-stream/xstream/issues/304#issuecomment-1293654236) for more information. ## Original Despcription Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack. This vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "published" : "2022-09-17T00:00:41Z",
      "updated" : "2023-01-31T05:02:48Z",
      "analysis" : {
        "state" : "false_positive",
        "detail" : "Withdrawn"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1c26727a-c38f-47ec-b0a6-13dffd5bb7ad",
      "id" : "GHSA-5hc5-c3m9-8vcj",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "low",
          "method" : "other"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "## Withdrawn This advisory has been withdrawn because it has been found to be a duplicate. Please see the issue [here](https://github.com/x-stream/xstream/issues/304#issuecomment-1293654236) for more information. ## Original Despcription Those using FasterXML/woodstox to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack. This vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "published" : "2022-09-17T00:00:41Z",
      "updated" : "2023-01-31T05:03:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "98a10b3b-a60c-49e7-a54b-159136a28991",
      "id" : "GHSA-4rv7-wj6m-6c6r",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "low",
          "method" : "other"
        }
      ],
      "description" : "## Withdrawn This advisory has been withdrawn because it has been found to be a duplicate. Please see the issue [here](https://github.com/x-stream/xstream/issues/304#issuecomment-1293654236) for more information. ## Original Despcription Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack. This vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "published" : "2022-09-17T00:00:41Z",
      "updated" : "2023-01-31T05:03:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "34a0ce28-919c-4d50-a502-4cc47892893a",
      "id" : "GHSA-9fwf-46g9-45rx",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "low",
          "method" : "other"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "## Withdrawn This advisory has been withdrawn because it has been found to be a duplicate. Please see the issue [here](https://github.com/x-stream/xstream/issues/304#issuecomment-1293654236) for more information. ## Original Despcription Those using FasterXML/woodstox to serialise XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack. This vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "published" : "2022-09-17T00:00:41Z",
      "updated" : "2023-01-31T05:03:01Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "28d3c9d3-b264-4aa7-a665-095444025403",
      "id" : "GHSA-3f7h-mf4q-vrm4",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "description" : "Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack. This vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "published" : "2022-09-17T00:00:41Z",
      "updated" : "2023-07-05T22:37:41Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "7ca3a737-b86f-4125-9de0-4d0dbda35317",
      "id" : "GHSA-2f88-5hg8-9x2x",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        346
      ],
      "description" : "Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
      "published" : "2021-06-16T17:32:49Z",
      "updated" : "2023-08-15T17:39:31Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Our program uses an internal nexus repository manager. All software libraries used in our builds are pulled directly from this repository. This vulnerability cannot manifest because no external sources/repositories can be reached. Compromised code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession() org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo() Patch commit(s): https://github.com/apache/maven/commit/28b4ea92d38365d0f27a5bd044ac4927580147f8 https://github.com/apache/maven/commit/3b21386c3f1ab85060f6c950fb2fb17123df8647 https://github.com/apache/maven/commit/907d53ad3264718f66ff15e1363d76b07dd0c05f Patched version(s): >= 3.8.1"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1236d9d2-d723-43a0-aec6-d87c265c1c37",
      "id" : "GHSA-rhgr-952r-6p8q",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        77,
        116
      ],
      "description" : "In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.",
      "published" : "2022-05-24T00:01:49Z",
      "updated" : "2023-06-30T19:57:53Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "protected_by_mitigating_control",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT executes commands in a command line via pre-written scripts. These scripts are executed via a gitlab pipeline. For these scripts to be changed, a user must go through the merge request process which requires approval from other predefined users. Compromised code: org/apache/maven/shared/utils/cli/shell/BourneShell.java org/apache/maven/shared/utils/cli/shell/Shell.java Patch commit(s): https://github.com/apache/maven-shared-utils/pull/40/files Patched version(s): >= 3.3.3"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "110aee2a-6575-43fe-b42d-4c44b04a6bf7",
      "id" : "GHSA-fgq9-fc3q-vqmw",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        776
      ],
      "description" : "## Withdrawn Advisory This advisory has been withdrawn because [the underlying vulnerability could not be reproduced](https://github.com/joker-xiaoyan/XXE-SAXReader/issues/1#issuecomment-1783780581). This link is maintained to preserve external references. ## Original Description An issue in dom4.j org.dom4.io.SAXReader v.2.1.4 and before allows a remote attacker to obtain sensitive information via the setFeature function.",
      "published" : "2023-10-25T18:32:23Z",
      "updated" : "2023-11-09T05:04:32Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "27eb8b3d-59a9-4ab8-adde-a1bb9361a341",
      "id" : "GHSA-4jrv-ppp4-jm57",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "The package `com.google.code.gson:gson` before 2.8.9 is vulnerable to Deserialization of Untrusted Data via the `writeReplace()` method in internal classes, which may lead to denial of service attacks.",
      "published" : "2022-05-03T00:00:44Z",
      "updated" : "2023-01-29T05:02:06Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/google/gson/internal/LazilyParsedNumber.writeReplace() com/google/gson/internal/StringMap.writeReplace() Patch commit(s): https://github.com/google/gson/pull/1991/commits Patched version(s): >= 2.8.9 Notes: Upgrading from 2.8.6 to 2.8.9 should not cause any issues or incompatibilities in our application"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "687064eb-876d-4e3b-9097-07ee58e21673",
      "id" : "GHSA-7r82-7xv7-xcpj",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        79
      ],
      "description" : "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
      "published" : "2021-06-03T23:40:23Z",
      "updated" : "2023-02-01T05:05:30Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "8c7481b4-b6bd-45bb-ad05-babeff0b3344",
      "id" : "GHSA-3x8x-79m2-3w2w",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "description" : "jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.",
      "published" : "2023-03-19T00:30:25Z",
      "updated" : "2023-03-23T18:23:19Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/3ccde7d938fea547e598fdefe9a82cff37fed5cb Patched version(s): >= 2.13.1 >= 2.12.6 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-2326698"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6a16f4b9-9e8c-4084-b990-758bd5c24871",
      "id" : "GHSA-jjjh-jjxp-wpff",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        502
      ],
      "description" : "In FasterXML jackson-databind 2.4.0-rc1 until 2.12.7.1 and in 2.13.x before 2.13.4.2 resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. This was patched in 2.12.7.1, 2.13.4.2, and 2.14.0. Commits that introduced vulnerable code are https://github.com/FasterXML/jackson-databind/commit/d499f2e7bbc5ebd63af11e1f5cf1989fa323aa45, https://github.com/FasterXML/jackson-databind/commit/0e37a39502439ecbaa1a5b5188387c01bf7f7fa1, and https://github.com/FasterXML/jackson-databind/commit/7ba9ac5b87a9d6ac0d2815158ecbeb315ad4dcdc. Fix commits are https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea and https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33.",
      "published" : "2022-10-03T00:00:31Z",
      "updated" : "2024-03-15T00:14:44Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/2c4a601c626f7790cad9d3c322d244e182838288 https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33 Patched version(s): >= 2.12.7.1 >= 2.13.4.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038426 Notes: This vulnerability is only exploitable when the non-default UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. TODO: Ensure UNWRAP_SINGLE_VALUE_ARRAYS is not enabled."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "656461a6-6bb8-4a67-9a27-e97e6abb257d",
      "id" : "GHSA-57j2-w4cx-62h2",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "jackson-databind is a data-binding package for the Jackson Data Processor. jackson-databind allows a Java stack overflow exception and denial of service via a large depth of nested objects.",
      "published" : "2022-03-12T00:00:36Z",
      "updated" : "2024-03-15T00:24:56Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/8238ab41d0350fb915797c89d46777b4496b74fd https://github.com/FasterXML/jackson-databind/commit/fcfc4998ec23f0b1f7f8a9521c2b317b6c25892b Patched version(s): >= 2.12.6.1 >= 2.13.2.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-2421244"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "fbbe3f26-7725-491b-b0c6-5263e21691b9",
      "id" : "GHSA-288c-cq4h-88gq",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        611
      ],
      "description" : "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
      "published" : "2021-02-18T20:51:54Z",
      "updated" : "2024-03-15T00:31:24Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/ext/DOMDeserializer.java Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59 Patched version(s): >= 2.6.7.4 >= 2.9.10.7 >= 2.10.5.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302 Notes: Attackers could retrieve personal / classified information by sending specially crafted XML files through the parser."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "497f15be-d057-459f-8030-59cd7eea0d99",
      "id" : "GHSA-rgv9-q543-rqg4",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        502
      ],
      "description" : "In FasterXML jackson-databind before 2.12.7.1 and in 2.13.x before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
      "published" : "2022-10-03T00:00:31Z",
      "updated" : "2024-03-24T05:01:05Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeFromArray() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88 https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea Patched version(s): >= 2.12.7.1 >= 2.13.4 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038424 Notes: For this vulnerability to be exploitable the non-default DeserializationFeature must be enabled. TODO: Ensure the non-default DeserializationFeature is NOT enabled."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "42b80a00-6e5e-483d-8399-7f075904398a",
      "id" : "GHSA-3j6g-hxx5-3q26",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        203
      ],
      "description" : "Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",
      "published" : "2021-09-23T23:18:58Z",
      "updated" : "2023-09-05T21:57:08Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "8b472c8d-34f4-456c-85f0-4f8cf166dff0",
      "id" : "GHSA-7286-pgfv-vxvh",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        639
      ],
      "description" : "Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like 'eve@EXAMPLE.COM', the authorization check will be skipped. As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree. Quorum Peer authentication is not enabled by default. Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue. Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue. See the documentation for more details on correct cluster administration.",
      "published" : "2023-10-11T12:30:27Z",
      "updated" : "2024-06-21T21:33:58Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update or do not set quorum.auth.enableSasl=true Mitigation: CRT does not have quorum.auth.enableSasl set to true Compromised code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java Patch commit(s): https://github.com/apache/zookeeper/commit/e2070bed85d8b0c98a5a0045bf92421f473c412e Patched version(s): >= 3.7.2 >= 3.8.3 >= 3.9.1"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c55ff0cc-ca52-4439-b838-0ee510f00581",
      "id" : "GHSA-57m8-f3v5-hm5m",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        295
      ],
      "description" : "## Withdrawn Advisory This advisory has been withdrawn because the underlying vulnerability only concerns Red Hat's Hot Rod client, which is not in one of the GitHub Advisory Database's [supported ecosystems](https://github.com/github/advisory-database/blob/main/README.md#supported-ecosystems). This link is maintained to preserve external references. ## Original Description Netty-handler has been found to no validate hostnames when using TLS in its default configuration. As a result netty-handler is vulnerable to man-in-the-middle attacks. Users would need to set the protocol to \"HTTPS\" in the SSLParameters of the SSLEngine to opt in to host name validation. A change in default behavior is expected in the `5.x` release branch with no backport planned. In the interim users are advised to enable host name validation in their configurations. See https://github.com/netty/netty/issues/8537 for details on the forthcoming change in default behavior.",
      "published" : "2023-10-04T12:30:14Z",
      "updated" : "2023-11-10T05:04:20Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "22878bad-6e4a-4be8-bff2-968722db8ed9",
      "id" : "GHSA-6mjq-h674-j845",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        770
      ],
      "description" : "### Summary The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. ### Details The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler` 1/ allocate a 16MB `ByteBuf` 2/ not fail `decode` method `in` buffer 3/ get out of the loop without an exception The combination of this without the use of a timeout makes easy to connect to a TCP server and allocate 16MB of heap memory per connection. ### Impact If the user has no idle timeout handler configured it might be possible for a remote peer to send a client hello packet which lead the server to buffer up to 16MB of data per connection. This could lead to a OutOfMemoryError and so result in a DDOS.",
      "published" : "2023-06-20T16:33:22Z",
      "updated" : "2024-06-24T21:24:22Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1ad61dc5-6c02-4d2c-bdb7-f0e95b836bad",
      "id" : "GHSA-9vjp-v76f-g363",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "### Impact The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk. ### Impact All users of SnappyFrameDecoder are affected and so the application may be in risk for a DoS attach due excessive memory usage. ### References https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/SnappyFrameDecoder.java#L79 https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/SnappyFrameDecoder.java#L171 https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/SnappyFrameDecoder.java#L185",
      "published" : "2021-09-09T17:11:31Z",
      "updated" : "2023-08-16T05:02:07Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: io/netty/handler/codec/compression/SnappyFrameDecoder.decode() Patch commit(s): https://github.com/netty/netty/commit/6da4956b31023ae967451e1d94ff51a746a9194f Patched version(s): >= 4.1.68.Final Links: https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1584063"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "2e5305dc-bc34-46ec-baef-1270c47b2a98",
      "id" : "GHSA-grg4-wf29-r9vv",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "### Impact The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack ### Workarounds No workarounds other than not using the `Bzip2Decoder` ### References Relevant code areas: https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/Bzip2Decoder.java#L80 https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/Bzip2Decoder.java#L294 https://github.com/netty/netty/blob/netty-4.1.67.Final/codec/src/main/java/io/netty/handler/codec/compression/Bzip2Decoder.java#L305",
      "published" : "2021-09-09T17:11:21Z",
      "updated" : "2023-08-16T05:02:24Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: io/netty/handler/codec/compression/Bzip2Decoder.decode() Patch commit(s): https://github.com/netty/netty/commit/41d3d61a61608f2223bb364955ab2045dd5e4020 Patched version(s): >= 4.1.68.Final Links: https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1584064"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "15ba271e-5410-4f65-9461-da9b038d5d74",
      "id" : "GHSA-cqj8-47ch-rvvq",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        276
      ],
      "description" : "In JetBrains Kotlin before 1.4.21, a vulnerable Java API was used for temporary file and folder creation. An attacker was able to read data from such files and list directories due to insecure permissions.",
      "published" : "2022-05-24T17:40:48Z",
      "updated" : "2023-01-27T05:02:33Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "459b2f61-3868-4c1b-8a90-e24fe2358d6b",
      "id" : "GHSA-2qp4-g3q3-f92w",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        667
      ],
      "description" : "In JetBrains Kotlin before 1.6.0, it was not possible to lock dependencies for Multiplatform Gradle Projects.",
      "published" : "2022-02-26T00:00:43Z",
      "updated" : "2023-01-27T05:02:51Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "4fd78b49-c57e-4551-9306-6c10ae5a2cd9",
      "id" : "GHSA-w33c-445m-f8w7",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        195,
        681
      ],
      "description" : "GzipSource does not handle an exception that might be raised when parsing a malformed gzip buffer. This may lead to denial of service of the Okio client when handling a crafted GZIP archive, by using the GzipSource class.",
      "published" : "2023-07-12T21:30:50Z",
      "updated" : "2023-11-27T22:23:27Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "ff41c7eb-66f7-4b00-b860-d2c6b4281c7d",
      "id" : "GHSA-9jwc-q6j3-8g9g",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        611
      ],
      "description" : "In Apache POI up to 4.1.0, when using the tool XSSFExportToXml to convert user-provided Microsoft Excel documents, a specially crafted document can allow an attacker to read files from the local filesystem or from internal network resources via XML External Entity (XXE) Processing.",
      "published" : "2022-05-24T16:59:46Z",
      "updated" : "2023-01-28T05:02:35Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1ec653cd-8eba-4a98-b66c-007c3ad4f3c3",
      "id" : "GHSA-xqfj-vm6h-2x34",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        130,
        770
      ],
      "description" : "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
      "published" : "2021-08-02T16:55:39Z",
      "updated" : "2023-01-27T05:02:19Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/tar/TarUtils.java org/apache/commons/compress/archivers/tar/TarFile.java org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=7ce1b0796d6cbe1f41b969583bd49f33ae0efef0 https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=d0af873e77d16f41edfef7b69da5c8c35c96a650 Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316640"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c7933641-a941-46a4-9450-6237f88bde2d",
      "id" : "GHSA-7hfm-57qf-j43q",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        834,
        835
      ],
      "description" : "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "published" : "2021-08-02T16:55:07Z",
      "updated" : "2023-01-27T05:02:27Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/sevenz/Folder.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=3fe6b42110dc56d0d6fe0aaf80cfecb8feea5321 Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316639"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "37108b97-f739-4c3b-8a74-dda6ac56b8d5",
      "id" : "GHSA-mc84-pj99-q6hh",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        130
      ],
      "description" : "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
      "published" : "2021-08-02T16:55:53Z",
      "updated" : "2023-01-27T05:02:28Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=ef5d70b625000e38404194aaab311b771c44efda Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316641"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f4bf298b-b2b7-444c-a43d-62c0c9f255cd",
      "id" : "GHSA-crv7-7245-f45f",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        130,
        770
      ],
      "description" : "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "published" : "2021-08-02T16:55:15Z",
      "updated" : "2023-01-27T05:02:44Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/sevenz/SevenZFile.java Patch commit(s): https://github.com/apache/commons-compress/commit/5761493cbaf7a7d608a3b68f4d61aaa822dbeb4f https://github.com/apache/commons-compress/commit/60d551a748236d7f4651a4ae88d5a351f7c5754b https://github.com/apache/commons-compress/commit/ae2b27cc011f47f0289cb24a11f2d4f1db711f8a https://github.com/apache/commons-compress/commit/bf5a5346ae04b9d2a5b0356ca75f11dcc8d94789 https://github.com/apache/commons-compress/commit/c51de6cfaec75b21566374158f25e1734c3a94cb https://github.com/apache/commons-compress/commit/26924e96c7730db014c310757e11c9359db07f3e https://github.com/apache/commons-compress/commit/0aba8b8fd8053ae323f15d736d1762b2161c76a6 https://github.com/apache/commons-compress/commit/26924e96c7730db014c310757e11c9359db07f3e Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316638"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "5a20a543-c6ea-4743-8f92-3e4d2309ceb7",
      "id" : "GHSA-53x6-4x5p-rrvv",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        835
      ],
      "description" : "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.",
      "published" : "2019-10-11T18:41:08Z",
      "updated" : "2023-10-09T22:16:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode() Patch commit(s): https://github.com/apache/commons-compress/commit/4ad5d80a6272e007f64a6ac66829ca189a8093b9 Patched version(s): >= 1.19 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-460507"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "077cb2bb-3b39-4878-bf31-410f3cd3cd11",
      "id" : "GHSA-4g9r-vxhx-9pgx",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        835
      ],
      "description" : "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.3 through 1.25.0. Users are recommended to upgrade to version 1.26.0 which fixes the issue.",
      "published" : "2024-02-19T09:30:50Z",
      "updated" : "2024-03-07T18:30:28Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java org/apache/commons/compress/archivers/dump/TapeInputStream.java Patch commit(s): https://github.com/apache/commons-compress/commit/8a9a5847c04ae39a1d45b365f8bb82022466067d Patched version(s): >= 1.26.0 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-6254296"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f4fdfbe9-8a3e-48c6-972a-ec62fa8bb6e3",
      "id" : "GHSA-8qv5-68g4-248j",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "Scala 2.13.x before 2.13.9 has a Java deserialization chain in its JAR file. On its own, it cannot be exploited. There is only a risk in conjunction with LazyList object deserialization within an application. In such situations, it allows attackers to erase contents of arbitrary files, make network connections, or possibly run arbitrary code (specifically, Function0 functions) via a gadget chain.",
      "published" : "2022-09-25T00:00:20Z",
      "updated" : "2023-01-31T05:02:39Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: src/library/scala/collection/immutable/LazyList.writeObject() src/library/scala/collection/immutable/LazyList.readObject() Patch commit(s): https://github.com/scala/scala/commit/3a124138843ef06594aa955800ba83d7c8ac2b84 Patched version(s): >= 2.13.9"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "29854de2-22a5-4a8f-9b02-ecab3732688c",
      "id" : "GHSA-cm59-pr5q-cw85",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        377,
        379,
        668
      ],
      "description" : "spring-boot versions prior to version `v2.2.11.RELEASE` was vulnerable to temporary directory hijacking. This vulnerability impacted the `org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir` method. The vulnerable method is used to create a work directory for embedded web servers such as Tomcat and Jetty. The directory contains configuration files, JSP/class files, etc. If a local attacker got the permission to write in this directory, they could completely take over the application (ie. local privilege escalation). #### Impact Location This vulnerability impacted the following source location: ```java /** * Return the absolute temp dir for given web server. * @param prefix server name * @return the temp dir for given server. */ protected final File createTempDir(String prefix) { try { File tempDir = File.createTempFile(prefix + \".\", \".\" + getPort()); tempDir.delete(); tempDir.mkdir(); tempDir.deleteOnExit(); return tempDir; } ``` \\- https://github.com/spring-projects/spring-boot/blob/ce70e7d768977242a8ea6f93188388f273be5851/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java#L165-L177 This vulnerability exists because `File.mkdir` returns `false` when it fails to create a directory, it does not throw an exception. As such, the following race condition exists: ```java File tmpDir =File.createTempFile(prefix + \".\", \".\" + getPort()); // Attacker knows the full path of the file that will be generated // delete the file that was created tmpDir.delete(); // Attacker sees file is deleted and begins a race to create their own directory before Jetty. // and make a directory of the same name // SECURITY VULNERABILITY: Race Condition! - Attacker beats java code and now owns this directory tmpDir.mkdirs(); // This method returns 'false' because it was unable to create the directory. No exception is thrown. // Attacker can write any new files to this directory that they wish. // Attacker can read any files created by this process. ``` ### Prerequisites This vulnerability impacts Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. ### Patches This vulnerability was inadvertently fixed as a part of this patch: https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d This vulnerability is patched in versions `v2.2.11.RELEASE` or later. ### Workarounds Setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.",
      "published" : "2022-07-11T20:59:02Z",
      "updated" : "2023-01-27T05:05:46Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir() Patch commit(s): https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d Patched version(s): >= 2.2.11.RELEASE Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-2438287"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "7bc85d3d-01b6-4880-be30-396b4281b5c5",
      "id" : "GHSA-xf96-w227-r7c4",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache. Specifically, an application is vulnerable if all of the conditions are true: * The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath. * The application makes use of Spring Boot's welcome page support, either static or templated. * Your application is deployed behind a proxy which caches 404 responses. Your application is NOT vulnerable if any of the following are true: * Spring MVC auto-configuration is disabled. This is true if WebMvcAutoConfiguration is explicitly excluded, if Spring MVC is not on the classpath, or if spring.main.web-application-type is set to a value other than SERVLET. * The application does not use Spring Boot's welcome page support. * You do not have a proxy which caches 404 responses. Affected Spring Products and Versions Spring Boot 3.0.0 to 3.0.6 2.7.0 to 2.7.11 2.6.0 to 2.6.14 2.5.0 to 2.5.14 Older, unsupported versions are also affected Mitigation Users of affected versions should apply the following mitigations: * 3.0.x users should upgrade to 3.0.7+ * 2.7.x users should upgrade to 2.7.12+ * 2.6.x users should upgrade to 2.6.15+ * 2.5.x users should upgrade to 2.5.15+ Users of older, unsupported versions should upgrade to 3.0.7+ or 2.7.12+. Workarounds: configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (/) of the application.",
      "published" : "2023-05-26T18:30:21Z",
      "updated" : "2023-11-07T05:01:41Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update / Disable Spring MVC auto-configuration / Disable welcome page support Mitigation: No vulnerable because CRT does not utilize Spring Boot's welcome page support Compromised code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.java Patch commit(s): https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78 Patched version(s): >= 2.5.15 >= 2.6.15 >= 2.7.12 >= 3.0.7 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-5564390"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c3be423b-f67b-4804-9350-3e7e96741b1d",
      "id" : "GHSA-vmq6-5m68-f53m",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data. This is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
      "published" : "2023-11-29T12:30:16Z",
      "updated" : "2023-12-05T21:31:13Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: ch/qos/logback/classic/spi/LoggingEventVO.readObject() Patch commit(s): https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731 https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3 Patched version(s): >= 1.2.13 >= 1.3.12 >= 1.4.12 Links: https://security.snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-6094942 Notes: Only exploitable is logback receiver component is deployed TODO: Determine is logback receiver is being deployed"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "875dc042-9b3e-4d34-9878-21732ee851b9",
      "id" : "GHSA-668q-qrv7-99fm",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
      "published" : "2021-12-17T20:00:50Z",
      "updated" : "2023-01-30T05:04:55Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c3be423b-f67b-4804-9350-3e7e96741b1d",
      "id" : "GHSA-vmq6-5m68-f53m",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data. This is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
      "published" : "2023-11-29T12:30:16Z",
      "updated" : "2023-12-05T21:31:13Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: ch/qos/logback/classic/spi/LoggingEventVO.readObject() Patch commit(s): https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731 https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3 Patched version(s): >= 1.2.13 >= 1.3.12 >= 1.4.12 Links: https://security.snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-6094942 Notes: Only exploitable is logback receiver component is deployed TODO: Determine is logback receiver is being deployed"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d1a4d0fc-4eb6-45cc-8b85-006c41dbbe65",
      "id" : "GHSA-rvwf-54qp-4r6v",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        776
      ],
      "description" : "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
      "published" : "2021-06-04T21:37:45Z",
      "updated" : "2023-05-22T20:17:58Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/yaml/snakeyaml/Yaml.loadFromReader() org/yaml/snakeyaml/Yaml.loadAll() org/yaml/snakeyaml/Yaml.composeAll() Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c Patched version(s): >= 1.26 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-537645"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "9c1e99a0-4c76-4c81-9209-a93644e5dcd0",
      "id" : "GHSA-9w3m-gqgf-c4p9",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        121,
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DoS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
      "published" : "2022-09-06T00:00:27Z",
      "updated" : "2024-03-15T12:30:36Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "b53b7513-569c-4b84-820d-d40b8b5e54e8",
      "id" : "GHSA-w37g-rhq8-7m4j",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        121,
        787
      ],
      "description" : "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
      "published" : "2022-11-11T19:00:31Z",
      "updated" : "2024-06-21T21:33:52Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "87b07ac2-151a-4457-9e89-a13c70263cab",
      "id" : "GHSA-c4r9-r8fh-9vj2",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        121,
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-06T00:00:27Z",
      "updated" : "2024-03-15T12:30:36Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "e0bc0007-c9d7-43da-a184-2dd9c32e2d45",
      "id" : "GHSA-hhhw-99gj-p3c3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        121,
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-06T00:00:27Z",
      "updated" : "2024-03-15T12:30:36Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "a0365911-cb62-43d9-8fc6-ed58ab57183f",
      "id" : "GHSA-98wm-3w3q-mw94",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        121,
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-06T00:00:27Z",
      "updated" : "2024-03-15T12:30:36Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "5b404ad4-ea1b-495c-a859-890c05185fc4",
      "id" : "GHSA-3mc7-4q67-w48m",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        776
      ],
      "description" : "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
      "published" : "2022-08-31T00:00:24Z",
      "updated" : "2024-03-15T19:06:46Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/yaml/snakeyaml/composer.Composer org/yaml/snakeyaml/LoaderOptions Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174 Patched version(s): >= 1.31 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "4d9b4b32-35f7-462c-9836-e026093be916",
      "id" : "GHSA-mjmj-j48q-9wg2",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        20,
        502
      ],
      "description" : "### Summary SnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line: new Yaml(new Constructor(TestDataClass.class)).load(yamlContent); Types do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious payload is deserialized. ### Severity High, lack of type checks during deserialization allows remote code execution. ### Proof of Concept Execute `bash run.sh`. The PoC uses Constructor to deserialize a payload for RCE. RCE is demonstrated by using a payload which performs a http request to http://127.0.0.1:8000. Example output of successful run of proof of concept: ``` $ bash run.sh [+] Downloading snakeyaml if needed [+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE nc: no process found [+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server. [+] An exception is expected. Exception: Cannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0 in 'string', line 1, column 1: payload: !!javax.script.ScriptEn ... ^ Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager in 'string', line 1, column 10: payload: !!javax.script.ScriptEngineManag ... ^ at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291) at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172) at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332) at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230) at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220) at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174) at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158) at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491) at org.yaml.snakeyaml.Yaml.load(Yaml.java:416) at Main.main(Main.java:37) Caused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167) at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171) at java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81) at java.base/java.lang.reflect.Field.set(Field.java:780) at org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44) at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286) ... 9 more [+] Dumping Received HTTP Request. Will not be empty if PoC worked GET /proof-of-concept HTTP/1.1 User-Agent: Java/11.0.14 Host: localhost:8000 Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2 Connection: keep-alive ``` ### Further Analysis Potential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject. A fix was released in version 2.0. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314 for more information. ### Timeline **Date reported**: 4/11/2022 **Date fixed**: **Date disclosed**: 10/13/2022",
      "published" : "2022-12-12T21:19:47Z",
      "updated" : "2024-06-24T21:22:59Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: org/yaml/snakeyaml/constructor/Constructor.java Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/2b8d47c8bcfd402e7a682b7b2674e8d0cb25e522 Patched version(s): >= 2.0"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "2decf9b4-4409-4ff6-a4f8-53ad0f8d1a1c",
      "id" : "GHSA-g5h3-w546-pj7f",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "description" : "In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.",
      "published" : "2023-04-20T21:33:27Z",
      "updated" : "2024-07-08T19:07:38Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update / do not use Cloud Foundry Mitigation: Cloud Foundry is not part of the CRT development stack. CRT uses Kubernetes/OpenShift for the deployment of running containerized images. This vulnerability can only manifest with containers deployed to Cloud Foundry. Compromised code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.java Patch commit(s): https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573 https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7 Patched version(s): >= 2.5.15 >= 2.6.15 >= 2.7.11 >= 3.0.6"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d3b5d0a6-6467-4140-81cf-7f19989cb21f",
      "id" : "GHSA-jjfh-589g-3hjx",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "description" : "In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition. Specifically, an application is vulnerable when all of the following are true: * the application uses Spring MVC or Spring WebFlux * `org.springframework.boot:spring-boot-actuator` is on the classpath",
      "published" : "2023-11-28T09:30:27Z",
      "updated" : "2024-07-09T15:05:49Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "675d83e9-811e-4690-a351-3bf374fac98f",
      "id" : "GHSA-rmrm-75hp-phr2",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        20
      ],
      "description" : "A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",
      "published" : "2021-06-04T21:36:34Z",
      "updated" : "2023-02-01T05:05:31Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "ae18bb18-e580-4b54-b36b-3329bd216e34",
      "id" : "GHSA-36p3-wjmg-h94x",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        74,
        94
      ],
      "description" : "Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as `Spring4Shell`. ## Impact A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it. These are the prerequisites for the exploit: - JDK 9 or higher - Apache Tomcat as the Servlet container - Packaged as WAR - `spring-webmvc` or `spring-webflux` dependency ## Patches - Spring Framework [5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) and [5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) - Spring Boot [2.6.6](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6) and [2.5.12](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12) ## Workarounds For those who are unable to upgrade, leaked reports recommend setting `disallowedFields` on `WebDataBinder` through an `@ControllerAdvice`. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets `disallowedFields` locally through its own `@InitBinder` method, which overrides the global setting. To apply the workaround in a more fail-safe way, applications could extend `RequestMappingHandlerAdapter` to update the `WebDataBinder` at the end after all other initialization. In order to do that, a Spring Boot application can declare a `WebMvcRegistrations` bean (Spring MVC) or a `WebFluxRegistrations` bean (Spring WebFlux).",
      "published" : "2022-03-31T18:30:50Z",
      "updated" : "2023-01-31T05:04:23Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT's current development environment uses JDK 8. This vulnerability requires the use of JDK 9+ to manifest. Compromised code: N/A Patch commit(s): N/A Patched version(s): >= 2.5.12 >= 2.6.6"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "62af0e22-cbed-46cc-9743-0fc109257268",
      "id" : "GHSA-j39c-c8hj-x4j3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        200
      ],
      "description" : "When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A's request.",
      "published" : "2021-06-16T17:45:29Z",
      "updated" : "2023-02-03T05:04:34Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/coyote/AbstractProtocol.process() Patch commit(s): https://github.com/apache/tomcat/commit/dd757c0a893e2e35f8bc1385d6967221ae8b9b9b Patched version(s): >= 10.0.2 >= 9.0.43 >= 8.5.63 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-1080638"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d601d3aa-b3c1-45a2-acfd-df10d21577d5",
      "id" : "GHSA-jgwr-3qm3-26f3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.",
      "published" : "2021-03-19T20:11:13Z",
      "updated" : "2023-02-03T05:04:49Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: org/apache/catalina/session/FileStore.file() org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile() Patch commit(s): https://github.com/apache/tomcat/commit/6d66e99ef85da93e4d2c2a536ca51aa3418bfaf4 Patched version(s): >= 10.0.2 >= 9.0.43 >= 8.5.63 >= 7.0.108 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-1080637 Notes: The following must be true for this vulnerability to manifest: a) an attacker is able to control the contents and name of a file on the server b) the server is configured to use the PersistenceManager with a FileStore c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "e26123ed-0bff-43fb-8648-ab9bcc2f5a07",
      "id" : "GHSA-q3mw-pvr8-9ggc",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        601
      ],
      "description" : "URL Redirection to Untrusted Site ('Open Redirect') vulnerability in FORM authentication feature Apache Tomcat. This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.0.12, from 9.0.0-M1 through 9.0.79 and from 8.5.0 through 8.5.92. The vulnerability is limited to the ROOT (default) web application.",
      "published" : "2023-08-25T21:30:48Z",
      "updated" : "2023-11-11T05:04:49Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "de466cad-3dc4-4188-97a2-e48686201703",
      "id" : "GHSA-fccv-jmmp-qg76",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        20,
        444
      ],
      "description" : "Improper Input Validation vulnerability in Apache Tomcat. Tomcat from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.1.15, from 9.0.0-M1 through 9.0.82, and from 8.5.0 through 8.5.95 did not correctly parse HTTP trailer headers. A trailer header that exceeded the header size limit could cause Tomcat to treat a single request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy. Users are recommended to upgrade to version 11.0.0-M11 onwards, 10.1.16 onwards, 9.0.83 onwards or 8.5.96 onwards, which fix the issue.",
      "published" : "2023-11-28T18:30:23Z",
      "updated" : "2024-07-12T19:17:29Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/catalina/connector/Request.java org/apache/catalina/connector/InputBuffer.realReadBytes() Patch commit(s): https://github.com/apache/tomcat/commit/6f181e1062a472bc5f0234980f66cbde42c1041b https://github.com/apache/tomcat/commit/7a2d8818fcea0b51747a67af9510ce7977245ebd https://github.com/apache/tomcat/commit/aa92971e879a519384c517febc39fd04c48d4642 https://github.com/apache/tomcat/commit/b5776d769bffeade865061bc8ecbeb2b56167b08 Patched version(s): >= 8.5.96 >= 9.0.83 >= 10.1.16 11.0.0-M10+ Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-6092281"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "e3ce63ca-d3b6-4781-a66c-798b0217cecb",
      "id" : "GHSA-2rvv-w9r2-rg7m",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        200,
        706
      ],
      "description" : "When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",
      "published" : "2021-05-13T22:30:02Z",
      "updated" : "2024-03-11T16:32:23Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "55cca129-365c-42cb-bed3-e7a95d0a9a12",
      "id" : "GHSA-hfrx-6qgj-fp6c",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads. Note that, like all of the file upload limits, the new configuration option (FileUploadBase#setFileCountMax) is not enabled by default and must be explicitly configured.",
      "published" : "2023-02-20T18:30:17Z",
      "updated" : "2024-04-18T17:14:10Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/fileupload/FileUploadBase.parseRequest() Patch commit(s): https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0 https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17 https://github.com/apache/tomcat/commit/063e2e81ede50c287f737cc8e2915ce7217e886e Patched version(s): >= 8.5.85 >= 9.0.71 >= 10.1.5 11.0.0-M3+ Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-3326459"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6d02b7a6-c5c9-4fa7-9aa6-d5d1481146e1",
      "id" : "GHSA-p22x-g9px-3945",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        20,
        444
      ],
      "description" : "If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.",
      "published" : "2022-11-01T12:00:30Z",
      "updated" : "2024-04-23T20:42:24Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/coyote/http11/Http11InputBuffer.parseHeader() Patch commit(s): https://github.com/apache/tomcat/commit/c9fe754e5d17e262dfbd3eab2a03ca96ff372dc3 Patched version(s): 8.5.53 9.0.68 10.0.27 10.1.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-3097829"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "208b84c2-5aac-4599-bb9f-f2ccb90dfe42",
      "id" : "GHSA-r6j3-px5g-cq3x",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        20
      ],
      "description" : "Improper Input Validation vulnerability in Apache Tomcat. Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially crafted, invalid trailer header could cause Tomcat to treat a single request as multiple requests leading to the possibility of request smuggling when behind a reverse proxy. Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.",
      "published" : "2023-10-10T21:31:12Z",
      "updated" : "2024-04-24T15:42:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6517276c-1dd4-474b-a558-3b6435974b7d",
      "id" : "GHSA-g8pj-r55q-5c2v",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        459
      ],
      "description" : "Incomplete Cleanup vulnerability in Apache Tomcat. When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could cause Tomcat to skip some parts of the recycling process leading to information leaking from the current request/response to the next. Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.",
      "published" : "2023-10-10T18:31:35Z",
      "updated" : "2024-04-25T22:21:36Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "7bfc44c9-80e2-43aa-87be-ce0325183506",
      "id" : "GHSA-qppj-fm5r-hxr3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "## HTTP/2 Rapid reset attack The HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed. Abuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. The HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately. The ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth. In a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client. Multiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows. ## swift-nio-http2 specific advisory swift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress. swift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.",
      "published" : "2023-10-10T21:28:24Z",
      "updated" : "2024-06-21T21:34:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "558db131-b86e-4375-a6d4-83f113233d9e",
      "id" : "GHSA-7w75-32cg-r6g2",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        20
      ],
      "description" : "Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98. Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.",
      "published" : "2024-03-13T18:31:34Z",
      "updated" : "2024-06-23T09:31:45Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "30f38900-4145-45c2-9086-26bde1103638",
      "id" : "GHSA-wm9w-rjj3-j356",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        755
      ],
      "description" : "Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed. This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89. Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.",
      "published" : "2024-07-03T21:39:44Z",
      "updated" : "2024-07-05T20:39:43Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/coyote/http2/Http2UpgradeHandler.decrementActiveRemoteStreamCount() Patch commit(s): https://github.com/apache/tomcat/commit/2344a4c0d03e307ba6b8ab6dc8b894cc8bac63f2 https://github.com/apache/tomcat/commit/2afae300c9ac9c0e516e2e9de580847d925365c3 https://github.com/apache/tomcat/commit/9fec9a82887853402833a80b584e3762c7423f5f Patched version(s): >= 9.0.90 >= 10.1.25 11.0.0-M21+ Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCATEMBED-7430175"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "4ab9408a-aad7-41ba-97cf-fe52753b1a73",
      "id" : "GHSA-v682-8vv8-vpwr",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        459
      ],
      "description" : "Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98. Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.",
      "published" : "2024-03-13T18:31:34Z",
      "updated" : "2024-06-23T09:31:45Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "dd1af0be-1e47-4aed-bf9e-a181d621978d",
      "id" : "GHSA-rqph-vqwm-22vc",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.",
      "published" : "2022-05-13T00:00:29Z",
      "updated" : "2024-03-14T20:54:21Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "3b130999-481c-4bed-beb9-702e7f9ee781",
      "id" : "GHSA-564r-hj7v-mcr5",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        917
      ],
      "description" : "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "published" : "2023-03-23T21:30:19Z",
      "updated" : "2024-03-24T05:00:56Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d5ca1695-fb25-4a73-805e-d10fbe747768",
      "id" : "GHSA-wxqc-pxw9-g2p8",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        400,
        770,
        917
      ],
      "description" : "In Spring Framework versions prior to 5.2.24.release+ , 5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial-of-service (DoS) condition.",
      "published" : "2023-04-13T21:30:27Z",
      "updated" : "2024-06-10T18:31:51Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "code_not_reachable",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT currently does not utilize SpEL expressions directly Compromised code: org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression() Patch commit(s): https://github.com/spring-projects/spring-framework/commit/965a6392757d20f9db19241126fcc719a51eac15 https://github.com/spring-projects/spring-framework/commit/b73f5fcac22555f844cf27a7eeb876cb9d7f7f7e https://github.com/spring-projects/spring-framework/commit/ebc82654282bda547fbc20a9749ab1bda886a46f Patched version(s): >= 5.2.24.RELEASE >= 5.3.27 >= 6.0.8 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-5422217"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "42b80a00-6e5e-483d-8399-7f075904398a",
      "id" : "GHSA-3j6g-hxx5-3q26",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        203
      ],
      "description" : "Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",
      "published" : "2021-09-23T23:18:58Z",
      "updated" : "2023-09-05T21:57:08Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6edee2ea-20e5-4856-921f-9169b3d9c366",
      "id" : "GHSA-55g7-9cwv-5qfv",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "### Summary snappy-java is a data compression library in Java. Its SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too-large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. ### Scope All versions of snappy-java including the latest released version 1.1.10.3. A fix is applied in 1.1.10.4 ### Details While performing mitigation efforts related to [CVE-2023-34455](https://nvd.nist.gov/vuln/detail/CVE-2023-34455) in Confluent products, our Application Security team closely analyzed the fix that was accepted and merged into snappy-java version 1.1.10.1 in [this](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea) commit. The check on [line 421](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea#diff-c3e53610267092989965e8c7dd2d4417d355ff7f560f9e8075b365f32569079fR421) only attempts to check if chunkSize is not a negative value. We believe that this is an inadequate fix as it misses an upper-bounds check for overly positive values such as 0x7FFFFFFF (or (2,147,483,647 in decimal) before actually [attempting to allocate](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea#diff-c3e53610267092989965e8c7dd2d4417d355ff7f560f9e8075b365f32569079fR429) the provided unverified number of bytes via the “chunkSize” variable. This missing upper-bounds check can lead to the applications depending upon snappy-java to allocate an inappropriate number of bytes on the heap which can then cause an java.lang.OutOfMemoryError exception. Under some specific conditions and contexts, this can lead to a Denial-of-Service (DoS) attack with a direct impact on the availability of the dependent implementations based on the usage of the snappy-java library for compression/decompression needs. ### PoC Compile and run the following code: ``` package org.example; import org.xerial.snappy.SnappyInputStream; import java.io.*; public class Main { public static void main(String[] args) throws IOException { byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff}; SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data)); byte[] out = new byte[50]; try { in.read(out); } catch (Exception ignored) { } } } ``` ### Impact Denial of Service of applications dependent on snappy-java especially if `ExitOnOutOfMemoryError` or `CrashOnOutOfMemoryError` is configured on the JVM. ### Credits Jan Werner, Mukul Khullar and Bharadwaj Machiraju from Confluent's Application Security team. We kindly request for a new CVE ID to be assigned once you acknowledge this vulnerability.",
      "published" : "2023-09-25T18:30:18Z",
      "updated" : "2023-11-07T05:05:02Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/xerial/snappy/SnappyInputStream.hasNextChunk() Patch commit(s): https://github.com/xerial/snappy-java/commit/9f8c3cf74223ed0a8a834134be9c917b9f10ceb5 Patched version(s): >= 1.1.10.4 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGXERIALSNAPPY-5918282"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c2b606db-ce67-407a-ad5e-6469b1f1f64b",
      "id" : "GHSA-pqr6-cmr2-h8hf",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        190
      ],
      "description" : "## Summary Due to unchecked multiplications, an integer overflow may occur, causing a fatal error. ## Impact Denial of Service ## Description The function [shuffle(int[] input)](https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107) in the file [BitShuffle.java](https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java) receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. ```java public static byte[] shuffle(int[] input) throws IOException { byte[] output = new byte[input.length * 4]; int numProcessed = impl.shuffle(input, 0, 4, input.length * 4, output, 0); assert(numProcessed == input.length * 4); return output; } ``` Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a “java.lang.NegativeArraySizeException” exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as “java.lang.ArrayIndexOutOfBoundsException”. The same issue exists also when using the “shuffle” functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue. ## Steps To Reproduce Compile and run the following code: ```java package org.example; import org.xerial.snappy.BitShuffle; import java.io.*; public class Main { public static void main(String[] args) throws IOException { int[] original = new int[0x40000000]; byte[] shuffled = BitShuffle.shuffle(original); System.out.println(shuffled[0]); } } ``` The program will crash, showing the following error (or similar): ``` Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0 at org.example.Main.main(Main.java:12) Process finished with exit code 1 ``` Alternatively - compile and run the following code: ```java package org.example; import org.xerial.snappy.BitShuffle; import java.io.*; public class Main { public static void main(String[] args) throws IOException { int[] original = new int[0x20000000]; byte[] shuffled = BitShuffle.shuffle(original); } } ``` The program will crash with the following error (or similar): ``` Exception in thread \"main\" java.lang.NegativeArraySizeException: -2147483648 at org.xerial.snappy.BitShuffle.shuffle(BitShuffle.java:108) at org.example.Main.main(Main.java:11) ```",
      "published" : "2023-06-15T16:13:20Z",
      "updated" : "2023-11-08T05:03:06Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "2ea1257e-38cb-414e-a212-aa4b4712ee45",
      "id" : "GHSA-fjpj-2g6w-x25r",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        190
      ],
      "description" : "## Summary Due to unchecked multiplications, an integer overflow may occur, causing an unrecoverable fatal error. ## Impact Denial of Service ## Description The function [compress(char[] input)](https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169) in the file [Snappy.java](https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java) receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the [rawCompress](https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422) function. ```java public static byte[] compress(char[] input) throws IOException { return rawCompress(input, input.length * 2); // char uses 2 bytes } ``` Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array. ```java public static byte[] rawCompress(Object data, int byteSize) throws IOException { byte[] buf = new byte[Snappy.maxCompressedLength(byteSize)]; int compressedByteSize = impl.rawCompress(data, 0, byteSize, buf, 0); byte[] result = new byte[compressedByteSize]; System.arraycopy(buf, 0, result, 0, compressedByteSize); return result; } ``` Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a “java.lang.NegativeArraySizeException” exception will be raised while trying to allocate the array “buf”. On the other side, if the result is positive, the “buf” array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error. The same issue exists also when using the “compress” functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place. ## Steps To Reproduce Compile and run the following code: ```java package org.example; import org.xerial.snappy.Snappy; import java.io.*; public class Main { public static void main(String[] args) throws IOException { char[] uncompressed = new char[0x40000000]; byte[] compressed = Snappy.compress(uncompressed); } } ``` The program will crash, creating crashdumps and showing the following error (or similar): ``` # # A fatal error has been detected by the Java Runtime Environment: # # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000063a01c20, pid=21164, tid=508 # ....... ``` Alternatively - compile and run the following code: ```java package org.example; import org.xerial.snappy.Snappy; import java.io.*; public class Main { public static void main(String[] args) throws IOException { char[] uncompressed = new char[0x3fffffff]; byte[] compressed = Snappy.compress(uncompressed); } } ``` The program will crash with the following error (or similar), since the maxCompressedLength returns a value that is interpreted as negative by java: ``` Exception in thread \"main\" java.lang.NegativeArraySizeException: -1789569677 at org.xerial.snappy.Snappy.rawCompress(Snappy.java:425) at org.xerial.snappy.Snappy.compress(Snappy.java:172) at org.example.Main.main(Main.java:10) ```",
      "published" : "2023-06-15T16:28:08Z",
      "updated" : "2023-11-08T05:03:06Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "96e51c4a-b5df-4f46-aabc-5789b3f751c5",
      "id" : "GHSA-qcwq-55hx-v3vh",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "## Summary Due to use of an unchecked chunk length, an unrecoverable fatal error can occur. ## Impact Denial of Service ## Description The code in the function [hasNextChunk](https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388) in the file [SnappyInputStream.java](https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java) checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk. ```java int readBytes = readNext(header, 0, 4); if (readBytes < 4) { return false; } int chunkSize = SnappyOutputStream.readInt(header, 0); if (chunkSize == SnappyCodec.MAGIC_HEADER_HEAD) { ......... } // extend the compressed data buffer size if (compressed == null || chunkSize > compressed.length) { compressed = new byte[chunkSize]; } ``` In the case that the “compressed” variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the “chunkSize” variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a “java.lang.NegativeArraySizeException” exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal “java.lang.OutOfMemoryError” error. ## Steps To Reproduce Compile and run the following code: ```java package org.example; import org.xerial.snappy.SnappyInputStream; import java.io.*; public class Main { public static void main(String[] args) throws IOException { byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff}; SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data)); byte[] out = new byte[50]; try { in.read(out); } catch (Exception ignored) { } } } ``` The program will crash with the following error (or similar), even though there is a catch clause, since “OutOfMemoryError” does not get caught by catching the “Exception” class: ``` Exception in thread \"main\" java.lang.OutOfMemoryError: Requested array size exceeds VM limit at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422) at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167) at java.base/java.io.InputStream.read(InputStream.java:217) at org.example.Main.main(Main.java:12) ``` Alternatively - compile and run the following code: ```java package org.example; import org.xerial.snappy.SnappyInputStream; import java.io.*; public class Main { public static void main(String[] args) throws IOException { byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff}; SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data)); byte[] out = new byte[50]; in.read(out); } } ``` The program will crash with the following error (or similar): ``` Exception in thread \"main\" java.lang.NegativeArraySizeException: -1 at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422) at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167) at java.base/java.io.InputStream.read(InputStream.java:217) at org.example.Main.main(Main.java:12) ``` It is important to note that these examples were written by using a flow that is generally used by developers, and can be seen for example in the Apache project “flume”: https://github.com/apache/flume/blob/f9dbb2de255d59e35e3668a5c6c66a268a055207/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java#L278. Since they used try-catch, the “NegativeArraySizeException” exception won’t harm their users, but the “OutOfMemoryError” error can.",
      "published" : "2023-06-15T17:15:06Z",
      "updated" : "2023-11-11T05:06:22Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/xerial/snappy/SnappyInputStream.hasNextChunk() Patch commit(s): https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea Patched version(s): >= 1.1.10.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGXERIALSNAPPY-5710960"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "b322bde0-1186-445c-a454-46e1dd38e880",
      "id" : "GHSA-mmmh-wcxm-2wr4",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        863
      ],
      "description" : "Spring Security, versions 5.7 prior to 5.7.5 and 5.6 prior to 5.6.9 could be susceptible to authorization rules bypass via forward or include dispatcher types. Specifically, an application is vulnerable when all of the following are true: The application expects that Spring Security applies security to forward and include dispatcher types. The application uses the AuthorizationFilter either manually or via the authorizeHttpRequests() method. The application configures the FilterChainProxy to apply to forward and/or include requests (e.g. spring.security.filter.dispatcher-types = request, error, async, forward, include). The application may forward or include the request to a higher privilege-secured endpoint.The application configures Spring Security to apply to every dispatcher type via authorizeHttpRequests().shouldFilterAllDispatcherTypes(true)",
      "published" : "2022-11-01T12:00:37Z",
      "updated" : "2023-01-31T05:06:04Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is using oauth2 and JWT for authorization. Spring security authorization has been disabled. Compromised code: N/A Patch commit(s): N/A Patched version(s): >= 5.7.5 >= 5.6.9 Notes: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-3092126 Users with version < 5.7.0 which does not have shouldFilterAllDispatcherTypes available, should add an ObjectPostProcessor: authorizeHttpRequests().withObjectPostProcessor(new ObjectPostProcessor<AuthorizationFilter>() { @Override public<O extends AuthorizationFilter> O postProcess(O filter) { filter.setObserveOncePerRequest(false); filter.setFilterAsyncDispatch(true); filter.setFilterErrorDispatch(true); return filter; }});"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "ad2cff52-3596-4d30-a3d0-8b973ff79819",
      "id" : "GHSA-x873-6rgc-94jc",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        459
      ],
      "description" : "In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.",
      "published" : "2023-04-19T21:30:26Z",
      "updated" : "2023-11-08T05:03:37Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "e9516781-df2a-4d05-9834-af92ed55e31e",
      "id" : "GHSA-f3jh-qvm4-mg39",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        287
      ],
      "description" : "In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter. Specifically, an application is vulnerable if: The application uses AuthenticatedVoter directly and a null authentication parameter is passed to it resulting in an erroneous true return value. An application is not vulnerable if any of the following is true: * The application does not use AuthenticatedVoter#vote directly. * The application does not pass null to AuthenticatedVoter#vote. Note that AuthenticatedVoter is deprecated since 5.8, use implementations of AuthorizationManager as a replacement.",
      "published" : "2024-03-18T15:30:51Z",
      "updated" : "2024-04-19T09:30:48Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update / do not use AuthenticatedVoter#vote directly Mitigation: CRT is using oauth2 and JWT for authorization. Spring security authorization has been disabled. Compromised code: org/springframework/security/access/vote/AuthenticatedVoter.isFullyAuthenticated() Patch commit(s): https://github.com/spring-projects/spring-security/commit/a972338e1dacf82e9cbb669b04678e4d09eae695 Patched version(s): >= 5.7.12 >= 5.8.11 >= 6.0.10 >= 6.1.8 >= 6.2.3 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-6457293 Notes: Users are not affected if: 1) The application does not use AuthenticatedVoter#vote directly. 2) The application does not pass null to AuthenticatedVoter#vote."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "50ab4e93-97d3-4fbb-a4ac-1ecbaaa84cbe",
      "id" : "GHSA-gvpg-vgmx-xg6w",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "In Connect2id Nimbus JOSE+JWT before 9.37.2, an attacker can cause a denial of service (resource consumption) via a large JWE p2c header value (aka iteration count) for the PasswordBasedDecrypter (PBKDF2) component.",
      "published" : "2024-02-11T06:30:27Z",
      "updated" : "2024-03-15T14:23:03Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1866c3e5-e2e4-4bbf-8e3d-924636677f4a",
      "id" : "GHSA-3h6f-g5f3-gc4w",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        284
      ],
      "description" : "Using \"**\" as a pattern in Spring Security configuration for WebFlux creates a mismatch in pattern matching between Spring Security and Spring WebFlux, and the potential for a security bypass.",
      "published" : "2023-07-19T15:30:26Z",
      "updated" : "2023-11-08T05:05:45Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is not utilizing Spring Security for HTTP requests. A spring security configuration has been specifically implemented to disable HTTP security authorization. Compromised code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers() org/springframework/security/config/web/server/ServerHttpSecurity.getPathPatternParser() Patch commit(s): https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780 Patched version(s): >= 5.6.12 >= 5.7.10 >= 5.8.5 >= 6.0.5 >= 6.1.2 Notes: The fixed versions require Spring Framework versions: 6.0.11+ 5.3.29+ 5.2.25+"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "fbbe8bb1-4265-4b57-ae4e-40de80e1cf0f",
      "id" : "GHSA-4wrc-f8pq-fpqp",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "critical",
          "method" : "other"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "Pivotal Spring Framework before 6.0.0 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. Maintainers recommend investigating alternative components or a potential mitigating control. Version 4.2.6 and 3.2.17 contain [enhanced documentation](https://github.com/spring-projects/spring-framework/commit/5cbe90b2cd91b866a5a9586e460f311860e11cfa) advising users to take precautions against unsafe Java deserialization, version 5.3.0 [deprecate the impacted classes](https://github.com/spring-projects/spring-framework/issues/25379) and version 6.0.0 [removed it entirely](https://github.com/spring-projects/spring-framework/issues/27422).",
      "published" : "2022-05-24T17:05:30Z",
      "updated" : "2023-06-01T19:56:27Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.java Patch commit(s): https://github.com/spring-projects/spring-framework/commit/2b051b8b321768a4cfef83077db65c6328ffd60f Patched version(s): >= 6.0.0"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "8fbd2b86-e8e0-4417-adf5-815fdf936fb7",
      "id" : "GHSA-2wrp-6fg6-hmc5",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "description" : "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks. This is the same as CVE-2024-22259 https://spring.io/security/cve-2024-22259  and CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.",
      "published" : "2024-04-16T06:30:28Z",
      "updated" : "2024-06-10T18:30:55Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/springframework/web/util/UriComponentsBuilder.java Patch commit(s): Patched version(s): >= 5.3.34 >= 6.0.19 >= 6.1.6 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-6597980"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "810579a9-84a1-44a8-982d-330c3792073c",
      "id" : "GHSA-ccgv-vj62-xf9h",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "description" : "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect attack or to a SSRF attack if the URL is used after passing validation checks.",
      "published" : "2024-02-23T06:30:31Z",
      "updated" : "2024-06-10T18:31:57Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/springframework/web/util/UriComponentsBuilder.java Patch commit(s): https://github.com/spring-projects/spring-framework/commit/120ea0a51c63171e624ca55dbd7cae627d53a042 Patched version(s): >= 5.3.32 >= 6.0.17 >= 6.1.4 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-6261586"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "43e50e3d-2789-4302-833f-381fde82533c",
      "id" : "GHSA-hgjh-9rj2-g67j",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "high",
          "method" : "other"
        }
      ],
      "cwes" : [
        601
      ],
      "description" : "Applications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks. This is the same as CVE-2024-22243 https://spring.io/security/cve-2024-22243, but with different input.",
      "published" : "2024-03-16T06:30:27Z",
      "updated" : "2024-06-10T18:31:58Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/springframework/web/util/UriComponentsBuilder.java Patch commit(s): https://github.com/spring-projects/spring-framework/commit/1d2b55e670bcdaa19086f6af9a5cec31dd0390f0 Patched version(s): >= 5.3.33 >= 6.0.18 >= 6.1.5 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-6444790"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "5d1e02a3-6b1c-404c-b3bb-45ff9e434479",
      "id" : "GHSA-5mg8-w23w-74h3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "low",
          "method" : "other"
        }
      ],
      "cwes" : [
        173,
        200,
        378,
        732
      ],
      "description" : "A temp directory creation vulnerability exists in Guava prior to version 32.0.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. Maintainers recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method.",
      "published" : "2021-03-25T17:04:19Z",
      "updated" : "2023-11-09T18:44:38Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "64149388-565d-4107-8671-68bc869d595e",
      "id" : "GHSA-mvr2-9pj6-7w5j",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        502,
        770
      ],
      "description" : "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
      "published" : "2020-06-15T20:35:11Z",
      "updated" : "2023-11-09T18:46:33Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "04549cf4-a230-431a-a629-75e07032bb63",
      "id" : "GHSA-7g45-4rm6-3mm3",
      "source" : {
        "name" : "GITHUB",
        "url" : "https://github.com/advisories"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "GITHUB",
            "url" : "https://github.com/advisories"
          },
          "severity" : "medium",
          "method" : "other"
        }
      ],
      "cwes" : [
        379,
        552
      ],
      "description" : "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class. Even though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
      "published" : "2023-06-14T18:30:38Z",
      "updated" : "2024-02-13T21:49:15Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "43340f7b-d3a4-44d9-97b8-e6e3439305fa",
      "id" : "CVE-2021-29425",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.8,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:N/C:P/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.8,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
        }
      ],
      "cwes" : [
        22
      ],
      "description" : "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
      "published" : "2021-04-13T07:15:00Z",
      "updated" : "2023-11-07T03:32:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d538acc9-7b6a-4804-8729-ea6810afb740",
      "id" : "CVE-2024-38374",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "description" : "The CycloneDX core module provides a model representation of the SBOM along with utilities to assist in creating, validating, and parsing SBOMs. Before deserializing CycloneDX Bill of Materials in XML format, _cyclonedx-core-java_ leverages XPath expressions to determine the schema version of the BOM. The `DocumentBuilderFactory` used to evaluate XPath expressions was not configured securely, making the library vulnerable to XML External Entity (XXE) injection. This vulnerability has been fixed in cyclonedx-core-java version 9.0.4.",
      "published" : "2024-06-28T18:15:00Z",
      "updated" : "2024-07-01T12:37:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "30cbc020-7afc-4b15-ab28-6fff3acb7bdc",
      "id" : "CVE-2022-40152",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
      "published" : "2022-09-16T10:15:00Z",
      "updated" : "2023-02-09T01:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/ctc/wstx/dtd/FullDTDReader.readContentSpec() Patch commit(s): https://github.com/FasterXML/woodstox/commit/7e93907e9c98270e76e20d55c4d35bd600edbb20 https://github.com/FasterXML/woodstox/commit/8d661535ce36fb7ea81f38f67b0b99de21521b11 Patched version(s): >= 5.4.0 >= 6.4.0 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLWOODSTOX-3091135"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "b21554e3-d4a2-4daa-8f1b-aa61aa5ec5be",
      "id" : "CVE-2021-26291",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.4,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:P/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.1,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
        }
      ],
      "cwes" : [
        346
      ],
      "description" : "Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
      "published" : "2021-04-23T15:15:00Z",
      "updated" : "2023-11-07T03:31:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT program uses an internal nexus repository manager. All software libraries used in CRT builds are pulled directly from this repository. This vulnerability cannot manifest because no external sources/repositories can be reached. Compromised code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession() org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo() Patch commit(s): https://github.com/apache/maven/commit/28b4ea92d38365d0f27a5bd044ac4927580147f8 https://github.com/apache/maven/commit/3b21386c3f1ab85060f6c950fb2fb17123df8647 https://github.com/apache/maven/commit/907d53ad3264718f66ff15e1363d76b07dd0c05f Patched version(s): >= 3.8.1 Notes: Duplicate of GHSA-2f88-5hg8-9x2x"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "b21554e3-d4a2-4daa-8f1b-aa61aa5ec5be",
      "id" : "CVE-2021-26291",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.4,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:P/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.1,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
        }
      ],
      "cwes" : [
        346
      ],
      "description" : "Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
      "published" : "2021-04-23T15:15:00Z",
      "updated" : "2023-11-07T03:31:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT program uses an internal nexus repository manager. All software libraries used in CRT builds are pulled directly from this repository. This vulnerability cannot manifest because no external sources/repositories can be reached. Compromised code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession() org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo() Patch commit(s): https://github.com/apache/maven/commit/28b4ea92d38365d0f27a5bd044ac4927580147f8 https://github.com/apache/maven/commit/3b21386c3f1ab85060f6c950fb2fb17123df8647 https://github.com/apache/maven/commit/907d53ad3264718f66ff15e1363d76b07dd0c05f Patched version(s): >= 3.8.1 Notes: Duplicate of GHSA-2f88-5hg8-9x2x"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "87e36756-3cf6-413d-8dfc-55724eda07ad",
      "id" : "CVE-2022-25647",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
      "published" : "2022-05-01T16:15:00Z",
      "updated" : "2022-11-28T17:33:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/google/gson/internal/LazilyParsedNumber.writeReplace() com/google/gson/internal/StringMap.writeReplace() Patch commit(s): https://github.com/google/gson/pull/1991/commits Patched version(s): >= 2.8.9 Notes: Upgrading from 2.8.6 to 2.8.9 should not cause any issues or incompatibilities in our application"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "13a0efcd-ad72-4221-8388-b64f5add90e4",
      "id" : "CVE-2020-13956",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
        }
      ],
      "description" : "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
      "published" : "2020-12-02T17:15:00Z",
      "updated" : "2023-11-07T03:17:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "73cc7ee0-32bd-428f-b615-796357587c6a",
      "id" : "CVE-2020-25649",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
        }
      ],
      "cwes" : [
        611
      ],
      "description" : "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
      "published" : "2020-12-03T17:15:00Z",
      "updated" : "2023-11-07T03:20:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/ext/DOMDeserializer.java Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59 Patched version(s): >= 2.6.7.4 >= 2.9.10.7 >= 2.10.5.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302 Notes: Attackers could retrieve personal / classified information by sending specially crafted XML files through the parser."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "4a01e9de-bd41-4d32-bd4e-07e933dc956e",
      "id" : "CVE-2020-36518",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
      "published" : "2022-03-11T07:15:00Z",
      "updated" : "2022-11-29T22:12:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/ext/DOMDeserializer.java Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59 Patched version(s): >= 2.6.7.4 >= 2.9.10.7 >= 2.10.5.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302 Notes: Attackers could retrieve personal / classified information by sending specially crafted XML files through the parser."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f5e868f6-9383-4eee-994c-054012653580",
      "id" : "CVE-2022-42003",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",
      "published" : "2022-10-02T05:15:00Z",
      "updated" : "2023-12-20T10:15:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/2c4a601c626f7790cad9d3c322d244e182838288 https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33 Patched version(s): >= 2.12.7.1 >= 2.13.4.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038426 Notes: This vulnerability is only exploitable when the non-default UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. TODO: Ensure UNWRAP_SINGLE_VALUE_ARRAYS is not enabled."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c2a9e13b-a63b-451a-8d8a-af93b4eff8a7",
      "id" : "CVE-2022-42004",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
      "published" : "2022-10-02T05:15:00Z",
      "updated" : "2022-12-02T15:10:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeFromArray() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88 https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea Patched version(s): >= 2.12.7.1 >= 2.13.4 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038424 Notes: For this vulnerability to be exploitable the non-default DeserializationFeature must be enabled. TODO: Ensure the non-default DeserializationFeature is NOT enabled."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "26cc50fd-bf9f-4f1f-b607-3ab83365e276",
      "id" : "CVE-2021-46877",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.",
      "published" : "2023-03-18T22:15:00Z",
      "updated" : "2023-08-08T14:21:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal() Patch commit(s): https://github.com/FasterXML/jackson-databind/commit/3ccde7d938fea547e598fdefe9a82cff37fed5cb Patched version(s): >= 2.13.1 >= 2.12.6 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-2326698"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "dbeb62aa-52dc-4f9f-8980-7e156c3c08e3",
      "id" : "CVE-2023-44981",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.1,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
        }
      ],
      "cwes" : [
        639
      ],
      "description" : "Authorization Bypass Through User-Controlled Key vulnerability in Apache ZooKeeper. If SASL Quorum Peer authentication is enabled in ZooKeeper (quorum.auth.enableSasl=true), the authorization is done by verifying that the instance part in SASL authentication ID is listed in zoo.cfg server list. The instance part in SASL auth ID is optional and if it's missing, like 'eve@EXAMPLE.COM', the authorization check will be skipped. As a result an arbitrary endpoint could join the cluster and begin propagating counterfeit changes to the leader, essentially giving it complete read-write access to the data tree. Quorum Peer authentication is not enabled by default. Users are recommended to upgrade to version 3.9.1, 3.8.3, 3.7.2, which fixes the issue. Alternately ensure the ensemble election/quorum communication is protected by a firewall as this will mitigate the issue. See the documentation for more details on correct cluster administration.",
      "published" : "2023-10-11T12:15:00Z",
      "updated" : "2024-06-21T19:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update or do not set quorum.auth.enableSasl=true Mitigation: CRT does not have quorum.auth.enableSasl set to true Compromised code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java Patch commit(s): https://github.com/apache/zookeeper/commit/e2070bed85d8b0c98a5a0045bf92421f473c412e Patched version(s): >= 3.7.2 >= 3.8.3 >= 3.9.1 Notes: Duplicate of GHSA-7286-pgfv-vxvh"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f0218160-302d-43e0-abf5-a306e4488df2",
      "id" : "CVE-2024-23944",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "cwes" : [
        200
      ],
      "description" : "Information disclosure in persistent watchers handling in Apache ZooKeeper due to missing ACL check. It allows an attacker to monitor child znodes by attaching a persistent watcher (addWatch command) to a parent which the attacker has already access to. ZooKeeper server doesn't do ACL check when the persistent watcher is triggered and as a consequence, the full path of znodes that a watch event gets triggered upon is exposed to the owner of the watcher. It's important to note that only the path is exposed by this vulnerability, not the data of znode, but since znode path can contain sensitive information like user name or login ID, this issue is potentially critical. Users are recommended to upgrade to version 3.9.2, 3.8.4 which fixes the issue.",
      "published" : "2024-03-15T11:15:00Z",
      "updated" : "2024-05-01T17:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "79daeaa7-6b1d-4321-8c66-8606e033c9fc",
      "id" : "CVE-2021-21290",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 1.9,
          "severity" : "low",
          "method" : "CVSSv2",
          "vector" : "(AV:L/AC:M/Au:N/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "cwes" : [
        378,
        379
      ],
      "description" : "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
      "published" : "2021-02-08T20:15:00Z",
      "updated" : "2023-11-07T03:29:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6c91d724-c9f0-4f35-9af4-f0d64aaccd5b",
      "id" : "CVE-2023-34462",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.",
      "published" : "2023-06-22T23:15:00Z",
      "updated" : "2024-06-21T19:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "79daeaa7-6b1d-4321-8c66-8606e033c9fc",
      "id" : "CVE-2021-21290",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 1.9,
          "severity" : "low",
          "method" : "CVSSv2",
          "vector" : "(AV:L/AC:M/Au:N/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "cwes" : [
        378,
        379
      ],
      "description" : "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
      "published" : "2021-02-08T20:15:00Z",
      "updated" : "2023-11-07T03:29:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "5fcbe270-0b7f-4b55-8e42-fbef83ef56f5",
      "id" : "CVE-2021-37136",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack",
      "published" : "2021-10-19T15:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: io/netty/handler/codec/compression/Bzip2Decoder.decode() Patch commit(s): https://github.com/netty/netty/commit/41d3d61a61608f2223bb364955ab2045dd5e4020 Patched version(s): >= 4.1.68.Final Links: https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1584064"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "855bd9eb-74be-4e4a-b212-fbccb4400c0b",
      "id" : "CVE-2021-37137",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.",
      "published" : "2021-10-19T15:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: io/netty/handler/codec/compression/SnappyFrameDecoder.decode() Patch commit(s): https://github.com/netty/netty/commit/6da4956b31023ae967451e1d94ff51a746a9194f Patched version(s): >= 4.1.68.Final Links: https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-1584063"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "af076724-cef0-4872-b5bc-e23b552ae0a5",
      "id" : "CVE-2022-41915",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
        }
      ],
      "cwes" : [
        113,
        436
      ],
      "description" : "Netty project is an event-driven asynchronous network application framework. Starting in version 4.1.83.Final and prior to 4.1.86.Final, when calling `DefaultHttpHeadesr.set` with an _iterator_ of values, header value validation was not performed, allowing malicious header values in the iterator to perform HTTP Response Splitting. This issue has been patched in version 4.1.86.Final. Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator<?>)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.",
      "published" : "2022-12-13T07:15:00Z",
      "updated" : "2023-03-01T15:09:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "996aaf06-368e-4351-a46e-1821a7aea1b8",
      "id" : "CVE-2022-24329",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
        }
      ],
      "cwes" : [
        667
      ],
      "description" : "In JetBrains Kotlin before 1.6.0, it was not possible to lock dependencies for Multiplatform Gradle Projects.",
      "published" : "2022-02-25T15:15:00Z",
      "updated" : "2023-02-22T17:50:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "46e7077c-d65a-4f13-86ae-7aa191b9a022",
      "id" : "CVE-2023-3635",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        681
      ],
      "description" : "GzipSource does not handle an exception that might be raised when parsing a malformed gzip buffer. This may lead to denial of service of the Okio client when handling a crafted GZIP archive, by using the GzipSource class.",
      "published" : "2023-07-12T19:15:00Z",
      "updated" : "2023-10-25T15:17:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: okio/GzipSource.consumeHeader() Patch commit(s): https://github.com/square/okio/commit/81bce1a30af244550b0324597720e4799281da7b https://github.com/square/okio/commit/b4fa875dc24950680c386e4b1c593660ce4f7839 Patched version(s): >= 1.17.6 >= 3.4.0 Links: https://security.snyk.io/vuln/SNYK-JAVA-COMSQUAREUPOKIO-5773320"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "446ce0c6-47a7-43aa-a9ad-799f45b11b1c",
      "id" : "CVE-2019-12415",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 2.1,
          "severity" : "low",
          "method" : "CVSSv2",
          "vector" : "(AV:L/AC:L/Au:N/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "cwes" : [
        611
      ],
      "description" : "In Apache POI up to 4.1.0, when using the tool XSSFExportToXml to convert user-provided Microsoft Excel documents, a specially crafted document can allow an attacker to read files from the local filesystem or from internal network resources via XML External Entity (XXE) Processing.",
      "published" : "2019-10-23T20:15:00Z",
      "updated" : "2023-11-07T03:03:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "58cf514b-741d-48a4-a64d-ea7feaf508ce",
      "id" : "CVE-2019-12402",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        835
      ],
      "description" : "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.",
      "published" : "2019-08-30T09:15:00Z",
      "updated" : "2023-11-07T03:03:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode() Patch commit(s): https://github.com/apache/commons-compress/commit/4ad5d80a6272e007f64a6ac66829ca189a8093b9 Patched version(s): >= 1.19 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-460507"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "0f7a6c94-d126-44bb-9243-62fe5bb6255d",
      "id" : "CVE-2021-35515",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        835
      ],
      "description" : "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "published" : "2021-07-13T08:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/sevenz/Folder.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=3fe6b42110dc56d0d6fe0aaf80cfecb8feea5321 Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316639"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f4ac9dae-a06b-4786-9061-904619bdd851",
      "id" : "CVE-2021-35516",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "published" : "2021-07-13T08:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/sevenz/SevenZFile.java Patch commit(s): https://github.com/apache/commons-compress/commit/5761493cbaf7a7d608a3b68f4d61aaa822dbeb4f https://github.com/apache/commons-compress/commit/60d551a748236d7f4651a4ae88d5a351f7c5754b https://github.com/apache/commons-compress/commit/ae2b27cc011f47f0289cb24a11f2d4f1db711f8a https://github.com/apache/commons-compress/commit/bf5a5346ae04b9d2a5b0356ca75f11dcc8d94789 https://github.com/apache/commons-compress/commit/c51de6cfaec75b21566374158f25e1734c3a94cb https://github.com/apache/commons-compress/commit/26924e96c7730db014c310757e11c9359db07f3e https://github.com/apache/commons-compress/commit/0aba8b8fd8053ae323f15d736d1762b2161c76a6 https://github.com/apache/commons-compress/commit/26924e96c7730db014c310757e11c9359db07f3e Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316638"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "63f4d822-3654-4e50-9e24-d8ae4a97f18b",
      "id" : "CVE-2021-35517",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
      "published" : "2021-07-13T08:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/tar/TarUtils.java org/apache/commons/compress/archivers/tar/TarFile.java org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=7ce1b0796d6cbe1f41b969583bd49f33ae0efef0 https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=d0af873e77d16f41edfef7b69da5c8c35c96a650 Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316640"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c3bdbebf-7c27-4372-968a-ae2fa9db92d0",
      "id" : "CVE-2021-36090",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
      "published" : "2021-07-13T08:15:00Z",
      "updated" : "2023-11-07T03:36:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java Patch commit(s): https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=ef5d70b625000e38404194aaab311b771c44efda Patched version(s): >= 1.21 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECOMMONS-1316641"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "bf1b2652-e8c0-4194-9b53-30effad3e81c",
      "id" : "CVE-2024-25710",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        835
      ],
      "description" : "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0. Users are recommended to upgrade to version 1.26.0 which fixes the issue.",
      "published" : "2024-02-19T09:15:00Z",
      "updated" : "2024-03-07T17:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "91162aeb-84ba-4ff6-b14d-a9a014626632",
      "id" : "CVE-2022-36944",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "Scala 2.13.x before 2.13.9 has a Java deserialization chain in its JAR file. On its own, it cannot be exploited. There is only a risk in conjunction with Java object deserialization within an application. In such situations, it allows attackers to erase contents of arbitrary files, make network connections, or possibly run arbitrary code (specifically, Function0 functions) via a gadget chain.",
      "published" : "2022-09-23T18:15:00Z",
      "updated" : "2023-11-07T03:49:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: src/library/scala/collection/immutable/LazyList.writeObject() src/library/scala/collection/immutable/LazyList.readObject() Patch commit(s): https://github.com/scala/scala/commit/3a124138843ef06594aa955800ba83d7c8ac2b84 Patched version(s): >= 2.13.9 Notes: Duplicate of GHSA-8qv5-68g4-248j"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f45763a9-4136-42db-a4a7-c5ab169a9117",
      "id" : "CVE-2022-27772",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.6,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:L/AC:L/Au:N/C:P/I:P/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.8,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        668
      ],
      "description" : "spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer",
      "published" : "2022-03-30T18:15:00Z",
      "updated" : "2024-05-17T02:07:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir() Patch commit(s): https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d Patched version(s): >= 2.2.11.RELEASE Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-2438287"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "a86692b7-66f1-4600-a784-5c561a54a11f",
      "id" : "CVE-2023-20883",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",
      "published" : "2023-05-26T17:15:00Z",
      "updated" : "2023-07-03T16:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update / Disable Spring MVC auto-configuration / Disable welcome page support Mitigation: No vulnerable because CRT does not utilize Spring Boot's welcome page support Compromised code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.java Patch commit(s): https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78 Patched version(s): >= 2.5.15 >= 2.6.15 >= 2.7.12 >= 3.0.7 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-5564390"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "38fc3638-1790-4fdc-b7c7-037be33e767b",
      "id" : "CVE-2023-6378",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "A serialization vulnerability in logback receiver component part of logback version 1.4.11 allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.",
      "published" : "2023-11-29T12:15:00Z",
      "updated" : "2023-12-05T21:00:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: ch/qos/logback/classic/spi/LoggingEventVO.readObject() Patch commit(s): https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731 https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3 Patched version(s): >= 1.2.13 >= 1.3.12 >= 1.4.12 Links: https://security.snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-6094942 Notes: Only exploitable is logback receiver component is deployed TODO: Determine is logback receiver is being deployed"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c44bfa8b-68d3-4cc4-b9f7-3afbdf5c2c63",
      "id" : "CVE-2021-42550",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 8.5,
          "severity" : "high",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:S/C:C/I:C/A:C)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.6,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
      "published" : "2021-12-16T19:15:00Z",
      "updated" : "2022-12-12T21:13:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "38fc3638-1790-4fdc-b7c7-037be33e767b",
      "id" : "CVE-2023-6378",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "A serialization vulnerability in logback receiver component part of logback version 1.4.11 allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.",
      "published" : "2023-11-29T12:15:00Z",
      "updated" : "2023-12-05T21:00:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: ch/qos/logback/classic/spi/LoggingEventVO.readObject() Patch commit(s): https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731 https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3 Patched version(s): >= 1.2.13 >= 1.3.12 >= 1.4.12 Links: https://security.snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-6094942 Notes: Only exploitable is logback receiver component is deployed TODO: Determine is logback receiver is being deployed"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "c44bfa8b-68d3-4cc4-b9f7-3afbdf5c2c63",
      "id" : "CVE-2021-42550",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 8.5,
          "severity" : "high",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:S/C:C/I:C/A:C)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.6,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
      "published" : "2021-12-16T19:15:00Z",
      "updated" : "2022-12-12T21:13:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "57ba3e4a-60a4-4100-a59c-07d2c27c171e",
      "id" : "CVE-2017-18640",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        776
      ],
      "description" : "The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/yaml/snakeyaml/Yaml.loadFromReader() org/yaml/snakeyaml/Yaml.loadAll() org/yaml/snakeyaml/Yaml.composeAll() Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c Patched version(s): >= 1.26 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-537645"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "dd5d01ac-cd9e-4683-b974-e3715d982139",
      "id" : "CVE-2022-1471",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.",
      "published" : "2022-12-01T11:15:00Z",
      "updated" : "2024-06-21T19:15:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: org/yaml/snakeyaml/constructor/Constructor.java Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/2b8d47c8bcfd402e7a682b7b2674e8d0cb25e522 Patched version(s): >= 2.0"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "cdbdbe72-8758-4b5a-9bc6-1cef2d110cc8",
      "id" : "CVE-2022-25857",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        776
      ],
      "description" : "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
      "published" : "2022-08-30T05:15:00Z",
      "updated" : "2024-03-15T11:15:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/yaml/snakeyaml/composer.Composer org/yaml/snakeyaml/LoaderOptions Patch commit(s): https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174 Patched version(s): >= 1.31 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "f48df6f2-b8e4-4759-aa22-4dc11eb092dd",
      "id" : "CVE-2022-38749",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-05T10:15:00Z",
      "updated" : "2024-03-15T11:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "3b6d988b-2525-49ee-8bfe-2c131cc40cfb",
      "id" : "CVE-2022-38750",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-05T10:15:00Z",
      "updated" : "2024-03-15T11:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "b41e68d4-3198-4d50-9a0f-0277ea0553cf",
      "id" : "CVE-2022-38751",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "published" : "2022-09-05T10:15:00Z",
      "updated" : "2024-03-15T11:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "fc8ff13a-4ace-4f3b-9aad-e4a5883d07b6",
      "id" : "CVE-2022-38752",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
      "published" : "2022-09-05T10:15:00Z",
      "updated" : "2024-03-15T11:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "55dbe384-081b-4e97-981f-416a6424d755",
      "id" : "CVE-2022-41854",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
      "published" : "2022-11-11T13:15:00Z",
      "updated" : "2024-06-21T19:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d5ddde1e-94b8-4aa7-899f-8842b50ceb2f",
      "id" : "CVE-2023-20873",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "description" : "In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.",
      "published" : "2023-04-20T21:15:00Z",
      "updated" : "2023-08-28T13:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_environment",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update / do not use Cloud Foundry Mitigation: Cloud Foundry is not part of the CRT development stack. CRT uses Kubernetes/OpenShift for the deployment of running containerized images. This vulnerability can only manifest with containers deployed to Cloud Foundry. Compromised code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.java Patch commit(s): https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573 https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7 Patched version(s): >= 2.5.15 >= 2.6.15 >= 2.7.11 >= 3.0.6"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6ff054c7-5e4a-472a-9523-59b35fa3eba2",
      "id" : "CVE-2023-34055",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition. Specifically, an application is vulnerable when all of the following are true: * the application uses Spring MVC or Spring WebFlux * org.springframework.boot:spring-boot-actuator is on the classpath",
      "published" : "2023-11-28T09:15:00Z",
      "updated" : "2023-12-21T22:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "0507e463-3306-4daa-b77e-61e127e3b15d",
      "id" : "CVE-2020-10693",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
        }
      ],
      "cwes" : [
        20
      ],
      "description" : "A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",
      "published" : "2020-05-06T14:15:00Z",
      "updated" : "2023-11-07T03:14:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "cac34377-4414-47a0-a14b-ec3629302483",
      "id" : "CVE-2022-22971",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:S/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.",
      "published" : "2022-05-12T20:15:00Z",
      "updated" : "2022-10-05T16:54:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "57a9c8ab-2490-423e-a7f0-1fadc26015f2",
      "id" : "CVE-2021-22060",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:S/C:N/I:P/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
        }
      ],
      "description" : "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
      "published" : "2022-01-10T14:10:00Z",
      "updated" : "2022-05-13T15:52:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "85957b0d-a950-413b-926e-f75997292d40",
      "id" : "CVE-2023-20861",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "published" : "2023-03-23T21:15:00Z",
      "updated" : "2023-04-20T09:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "9d8e70e1-56b5-4b6d-95ae-248b6da63f2d",
      "id" : "CVE-2023-20863",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        917
      ],
      "description" : "In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "published" : "2023-04-13T20:15:00Z",
      "updated" : "2024-06-10T17:16:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "db2b37bc-fe35-4fa0-8958-079711944d14",
      "id" : "CVE-2023-34040",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.8,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "In Spring for Apache Kafka 3.0.9 and earlier and versions 2.9.10 and earlier, a possible deserialization attack vector existed, but only if unusual configuration was applied. An attacker would have to construct a malicious serialized object in one of the deserialization exception record headers. Specifically, an application is vulnerable when all of the following are true: * The user does not configure an ErrorHandlingDeserializer for the key and/or value of the record * The user explicitly sets container properties checkDeserExWhenKeyNull and/or checkDeserExWhenValueNull container properties to true. * The user allows untrusted sources to publish to a Kafka topic By default, these properties are false, and the container only attempts to deserialize the headers if an ErrorHandlingDeserializer is configured. The ErrorHandlingDeserializer prevents the vulnerability by removing any such malicious headers before processing the record.",
      "published" : "2023-08-24T13:15:00Z",
      "updated" : "2023-10-18T17:56:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: CRT has not explicitly set the properties checkDeserExWhenKeyNull and/or checkDeserExWhenValueNull, which means this vulnerability cannot manifest Compromised code: org/springframework/kafka/listener/KafkaMessageListenerContainer.java Patch commit(s): https://github.com/spring-projects/spring-kafka/commit/e9564134733e81ba530d83193b68c0c34cb7a556 Patched version(s): >= 2.9.11 >= 3.0.10 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKKAFKA-5855818 Notes: Specifically, an application is vulnerable when all of the following are true: 1) The user does not configure an ErrorHandlingDeserializer for the key and/or value of the record. 2)The user explicitly sets container properties checkDeserExWhenKeyNull and/or checkDeserExWhenValueNull container properties to true. 3)The user allows untrusted sources to publish to a Kafka topic. By default, these properties are false."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "132ca725-39bb-4df1-bc30-7b4c2dece2fd",
      "id" : "CVE-2021-38153",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.3,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:N/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.9,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "cwes" : [
        203
      ],
      "description" : "Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",
      "published" : "2021-09-22T09:15:00Z",
      "updated" : "2023-11-07T03:37:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "75d41fe1-8c6d-49bc-a042-beb3d71dea49",
      "id" : "CVE-2023-25194",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 8.8,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "A possible security vulnerability has been identified in Apache Kafka Connect API. This requires access to a Kafka Connect worker, and the ability to create/modify connectors on it with an arbitrary Kafka client SASL JAAS config and a SASL-based security protocol, which has been possible on Kafka Connect clusters since Apache Kafka Connect 2.3.0. When configuring the connector via the Kafka Connect REST API, an authenticated operator can set the `sasl.jaas.config` property for any of the connector's Kafka clients to \"com.sun.security.auth.module.JndiLoginModule\", which can be done via the `producer.override.sasl.jaas.config`, `consumer.override.sasl.jaas.config`, or `admin.override.sasl.jaas.config` properties. This will allow the server to connect to the attacker's LDAP server and deserialize the LDAP response, which the attacker can use to execute java deserialization gadget chains on the Kafka connect server. Attacker can cause unrestricted deserialization of untrusted data (or) RCE vulnerability when there are gadgets in the classpath. Since Apache Kafka 3.0.0, users are allowed to specify these properties in connector configurations for Kafka Connect clusters running with out-of-the-box configurations. Before Apache Kafka 3.0.0, users may not specify these properties unless the Kafka Connect cluster has been reconfigured with a connector client override policy that permits them. Since Apache Kafka 3.4.0, we have added a system property (\"-Dorg.apache.kafka.disallowed.login.modules\") to disable the problematic login modules usage in SASL JAAS configuration. Also by default \"com.sun.security.auth.module.JndiLoginModule\" is disabled in Apache Kafka Connect 3.4.0. We advise the Kafka Connect users to validate connector configurations and only allow trusted JNDI configurations. Also examine connector dependencies for vulnerable versions and either upgrade their connectors, upgrading that specific dependency, or removing the connectors as options for remediation. Finally, in addition to leveraging the \"org.apache.kafka.disallowed.login.modules\" system property, Kafka Connect users can also implement their own connector client config override policy, which can be used to control which Kafka client properties can be overridden directly in a connector config and which cannot.",
      "published" : "2023-02-07T20:15:00Z",
      "updated" : "2023-07-21T12:15:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update or: 1) Kafka Connect users are advised to validate connector configurations and only allow trusted JNDI configurations. 2) Users should examine connector dependencies for vulnerable versions and either upgrade their connectors, upgrading that specific dependency, or removing the connectors as options for remediation. 3) Kafka Connect users can also implement their own connector client config override policy, which can be used to control which Kafka client properties can be overridden directly in a connector config and which cannot. Mitigation: Pending Compromised code: org/apache/kafka/common/security/JaasContext.load() Patch commit(s): https://github.com/apache/kafka/commit/ae22ec1a0ea005664439c3f45111aa34390ecaa1 Patched version(s): >= 3.4.0 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEKAFKA-3317161 Notes: Exploitation requires access to a Kafka Connect worker, and the ability to create/modify connectors on it with an arbitrary Kafka client SASL JAAS config and a SASL-based security protocol."
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "3d6f9140-818a-4276-8ff3-d53c7b8450fd",
      "id" : "CVE-2023-34453",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        190
      ],
      "description" : "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error. The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`. The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue. Version 1.1.10.1 contains a patch for this vulnerability.",
      "published" : "2023-06-15T17:15:00Z",
      "updated" : "2023-06-27T15:59:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/xerial/snappy/BitShuffle.shuffle() Patch commit(s): https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905 Patched version(s): >= 1.1.10.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGXERIALSNAPPY-5710959"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "3a6fa790-9952-4067-82a9-3a3014f751d1",
      "id" : "CVE-2023-34454",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        190
      ],
      "description" : "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error. The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function. Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array. Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error. The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place. Version 1.1.10.1 contains a patch for this issue.",
      "published" : "2023-06-15T17:15:00Z",
      "updated" : "2023-06-27T16:04:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/xerial/snappy/Snappy.compress() org/xerial/snappy/Snappy.rawCompress() Patch commit(s): https://github.com/xerial/snappy-java/commit/d0042551e4a3509a725038eb9b2ad1f683674d94 Patched version(s): >= 1.1.10.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGXERIALSNAPPY-5710961"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d896f704-6a58-47bb-ad9a-e234718e868a",
      "id" : "CVE-2023-34455",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1. The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk. In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error. Version 1.1.10.1 contains a patch for this issue.",
      "published" : "2023-06-15T18:15:00Z",
      "updated" : "2024-02-01T14:17:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Pending Compromised code: org/xerial/snappy/SnappyInputStream.hasNextChunk() Patch commit(s): https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea Patched version(s): >= 1.1.10.1 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGXERIALSNAPPY-5710960"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "fc492aad-c5c5-466e-9c98-33ab5990e291",
      "id" : "CVE-2024-22257",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "description" : "In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to 5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, versions 6.2.x prior to 6.2.3, an application is possible vulnerable to broken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.",
      "published" : "2024-03-18T15:15:00Z",
      "updated" : "2024-04-19T07:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "71fe6d0f-0416-4c7b-84b6-ddb333c8feb1",
      "id" : "CVE-2020-5408",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:S/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "cwes" : [
        330
      ],
      "description" : "Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.",
      "published" : "2020-05-14T18:15:00Z",
      "updated" : "2021-06-14T18:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "284e904c-6f78-489f-9b6a-c09240b58c5c",
      "id" : "CVE-2023-52428",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "description" : "In Connect2id Nimbus JOSE+JWT before 9.37.2, an attacker can cause a denial of service (resource consumption) via a large JWE p2c header value (aka iteration count) for the PasswordBasedDecrypter (PBKDF2) component.",
      "published" : "2024-02-11T05:15:00Z",
      "updated" : "2024-02-11T22:29:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1b04e9d5-7d78-48c1-92e5-74430235fe2f",
      "id" : "CVE-2023-20862",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
        }
      ],
      "cwes" : [
        459
      ],
      "description" : "In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.",
      "published" : "2023-04-19T20:15:00Z",
      "updated" : "2023-08-23T18:34:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6c3a6673-f70e-4a33-a59b-e4730076f4e2",
      "id" : "CVE-2023-34034",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "description" : "Using \"**\" as a pattern in Spring Security configuration for WebFlux creates a mismatch in pattern matching between Spring Security and Spring WebFlux, and the potential for a security bypass.",
      "published" : "2023-07-19T15:15:00Z",
      "updated" : "2023-08-14T19:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is not utilizing Spring Security for HTTP requests. A spring security configuration has been specifically implemented to disable HTTP security authorization. Compromised code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers() org/springframework/security/config/web/server/ServerHttpSecurity.getPathPatternParser() Patch commit(s): https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780 Patched version(s): >= 5.6.12 >= 5.7.10 >= 5.8.5 >= 6.0.5 >= 6.1.2 Notes: The fixed versions require Spring Framework versions: 6.0.11+ 5.3.29+ 5.2.25+ Notes: Duplicate of GHSA-3h6f-g5f3-gc4w"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "8e9cad54-79dc-4935-b725-684e0e039882",
      "id" : "CVE-2022-31692",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "description" : "Spring Security, versions 5.7 prior to 5.7.5 and 5.6 prior to 5.6.9 could be susceptible to authorization rules bypass via forward or include dispatcher types. Specifically, an application is vulnerable when all of the following are true: The application expects that Spring Security applies security to forward and include dispatcher types. The application uses the AuthorizationFilter either manually or via the authorizeHttpRequests() method. The application configures the FilterChainProxy to apply to forward and/or include requests (e.g. spring.security.filter.dispatcher-types = request, error, async, forward, include). The application may forward or include the request to a higher privilege-secured endpoint.The application configures Spring Security to apply to every dispatcher type via authorizeHttpRequests().shouldFilterAllDispatcherTypes(true)",
      "published" : "2022-10-31T20:15:00Z",
      "updated" : "2023-08-08T14:22:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is using oauth2 and JWT for authorization. Spring security authorization has been disabled. Compromised code: org/springframework/security/web/access/intercept/AuthorizationFilter.java Patch commit(s): https://github.com/spring-projects/spring-security/commit/1f481aafff14f324ffe2b43a973d3d5f54ae92d4 Patched version(s): >= 5.7.5 >= 5.6.9 Notes: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-3092126 Users with version < 5.7.0 which does not have shouldFilterAllDispatcherTypes available, should add an ObjectPostProcessor: authorizeHttpRequests().withObjectPostProcessor(new ObjectPostProcessor<AuthorizationFilter>() { @Override public<O extends AuthorizationFilter> O postProcess(O filter) { filter.setObserveOncePerRequest(false); filter.setFilterAsyncDispatch(true); filter.setFilterErrorDispatch(true); return filter; }});"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "1b04e9d5-7d78-48c1-92e5-74430235fe2f",
      "id" : "CVE-2023-20862",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
        }
      ],
      "cwes" : [
        459
      ],
      "description" : "In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.",
      "published" : "2023-04-19T20:15:00Z",
      "updated" : "2023-08-23T18:34:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "6c3a6673-f70e-4a33-a59b-e4730076f4e2",
      "id" : "CVE-2023-34034",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "description" : "Using \"**\" as a pattern in Spring Security configuration for WebFlux creates a mismatch in pattern matching between Spring Security and Spring WebFlux, and the potential for a security bypass.",
      "published" : "2023-07-19T15:15:00Z",
      "updated" : "2023-08-14T19:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is not utilizing Spring Security for HTTP requests. A spring security configuration has been specifically implemented to disable HTTP security authorization. Compromised code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers() org/springframework/security/config/web/server/ServerHttpSecurity.getPathPatternParser() Patch commit(s): https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780 Patched version(s): >= 5.6.12 >= 5.7.10 >= 5.8.5 >= 6.0.5 >= 6.1.2 Notes: The fixed versions require Spring Framework versions: 6.0.11+ 5.3.29+ 5.2.25+"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "514e4dab-1b14-40ec-a57f-ebee03c8fb3d",
      "id" : "CVE-2016-1000027",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        502
      ],
      "description" : "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: Under review Compromised code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.java Patch commit(s): https://github.com/spring-projects/spring-framework/commit/2b051b8b321768a4cfef83077db65c6328ffd60f Patched version(s): >= 6.0.0 Notes: Duplicate of GHSA-4wrc-f8pq-fpqp"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "d85e901e-39f9-4153-b636-5f216e49726b",
      "id" : "CVE-2024-22243",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "description" : "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.",
      "published" : "2024-02-23T05:15:00Z",
      "updated" : "2024-06-10T18:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "73dc34e8-365e-4d04-8a93-4001066e4d06",
      "id" : "CVE-2024-22262",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "severity" : "unknown",
          "method" : "other"
        }
      ],
      "description" : "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks. This is the same as CVE-2024-22259 https://spring.io/security/cve-2024-22259  and CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.",
      "published" : "2024-04-16T06:15:00Z",
      "updated" : "2024-06-10T18:15:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "2dbfa720-4308-47ac-ad78-d1e22410fd2c",
      "id" : "CVE-2023-20860",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
        }
      ],
      "description" : "Spring Framework running version 6.0.0 - 6.0.6 or 5.3.0 - 5.3.25 using \"**\" as a pattern in Spring Security configuration with the mvcRequestMatcher creates a mismatch in pattern matching between Spring Security and Spring MVC, and the potential for a security bypass.",
      "published" : "2023-03-27T22:15:00Z",
      "updated" : "2023-05-05T20:15:00Z",
      "analysis" : {
        "state" : "not_affected",
        "justification" : "requires_configuration",
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Network Advisory: Update Mitigation: CRT is using oauth2 and JWT for authorization. Spring security authorization has been disabled. Compromised code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.java org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.java Patch commit(s): https://github.com/spring-projects/spring-framework/commit/202fa5cdb3a3d0cfe6967e85fa167d978244f28a Patched version(s): >= 5.3.26 >= 6.0.7 Links: https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-3369852"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "cc614745-99b4-431f-881a-65324e1b97b4",
      "id" : "CVE-2018-10237",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.3,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:N/C:N/I:N/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.9,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        770
      ],
      "description" : "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
      "published" : "2018-04-26T21:29:00Z",
      "updated" : "2023-11-07T02:51:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "3dd0419b-3582-495a-ade7-3b2f8b9fcff3",
      "id" : "CVE-2023-2976",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.1,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"
        }
      ],
      "cwes" : [
        552
      ],
      "description" : "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class. Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
      "published" : "2023-06-14T18:15:00Z",
      "updated" : "2024-02-13T19:15:00Z",
      "analysis" : {
        "response" : [
          "update"
        ],
        "detail" : "Attack vector: Local Advisory: Update Mitigation: Pending Compromised code: com/google/common/io/FileBackedOutputStream.java Patch commit(s): https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284 Patched version(s): >= 32.0.0-android (maintainers recommend using version 32.0.1) >= 32.0.0-jre (maintainers recommend using version 32.0.1) Links: https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEGUAVA-5710356"
      },
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    },
    {
      "bom-ref" : "480e4291-3b8a-4c04-9fd2-fdb3d31ec140",
      "id" : "CVE-2020-8908",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 2.1,
          "severity" : "low",
          "method" : "CVSSv2",
          "vector" : "(AV:L/AC:L/Au:N/C:P/I:N/A:N)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 3.3,
          "severity" : "low",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
        }
      ],
      "cwes" : [
        732
      ],
      "description" : "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
      "published" : "2020-12-10T23:15:00Z",
      "updated" : "2023-08-02T17:30:00Z",
      "affects" : [
        {
          "ref" : "ddb44571-59f3-44da-baf5-79e888e044df"
        }
      ]
    }
  ]
}